[{"content":"Introdu√ß√£o √â argument√°vel que 2023 foi o ano da Intelig√™ncia Artificial. Pessoas que, como eu, j√° tinham um contato mais pr√≥ximo com a estat√≠stica, em virtude da sua forma√ß√£o acad√™mica, conheciam conceitos que s√£o o \u0026ldquo;feij√£o com arroz\u0026rdquo; de Machine Learning (ML), como regress√£o e otimiza√ß√£o, alguns at√© j√° sabiam sobre a exist√™ncia das IAs generativas, mas poucos realmente possuiam acesso √† tecnologia.\nIsso mudou, principalmente, gra√ßas ao ChatGPT, uma intelig√™ncia artificial generativa desenvolvida pela companhia (ou organiza√ß√£o? confesso que n√£o sei direito qual √© a deles) OpenAI. De repente todo mundo com acesso √† internet tinha um rob√¥zinho capaz de responder qualquer coisa em poucos clicks. A ferramenta foi lan√ßada no frigir dos ovos de 2022 e, ainda em janeiro do ano seguinte, j√° havia chegado aos 100 milh√µes de usu√°rios, uma explos√£o de usu√°rios t√£o intensa, que lhe angariou o t√≠tulo de \u0026ldquo;Aplica√ß√£o de mais r√°pido crescimento da hist√≥ria\u0026rdquo;. [1]\nJunto desse crescimento aterrador, percebi duas formas com as quais as pessoas tendiam a encarar o fen√¥meno:\nUm sentimento an√°logo ao in√≠cio da internet, com um otimismo exagerado e, principalmente, uso indiscriminado das novas ferramentas. Em um tom um pouco mais comedido, a compreens√£o do √¥nus e o b√¥nus das IAs, tentando ser mais cr√≠tico ao uso da nova tecnologia. Eu tendo a ser um cara mais c√©tico, ent√£o fiquei no segundo grupo. Mas isso n√£o me faz um ludista digital, pelo contr√°rio. Por trabalhar na √°rea, eu sou bombardeado com novas tecnologias cujos desenvolvedores juram de p√©s juntos que v√£o revolucionar o mundo. Meu trabalho, em partes, √© separar o joio do trigo.\nSe a tecnologia √© passageira e eu pular nesse barco sem olhar pra tr√°s, em alguns meses vou ter uma mir√≠ade de solu√ß√µes desenhadas para uma tecnologia que n√£o possui mais suporte. Essa brincadeira sai caro e √© trabalhosa, gerando o t√£o temido debito t√©cnico üëª.\nPor outro lado, ao n√£o adotar o novo estado da arte na minha √°rea, eu estou correndo o risco de me tornar um profissional desatualizado e minhas aplica√ß√µes serem piores que elas poderiam ser.\nTudo na vida √© quest√£o de equil√≠brio. No caso do Aprendizado de M√°quina, a hist√≥ria n√£o √© diferente.\nDito isso, as intelig√™ncias artificiais e ferramentas de aprendizado de m√°quina vieram para ficar. Quando o otimismo desenfreado acabar, muitas pessoas v√£o ver que est√£o usando um canh√£o para matar formigas, e, espero, adotar ferramentas mais bem dimensionadas para o servi√ßo. Para aqueles problemas que realmente precisam (ou se beneficiam) do Aprendizado de M√°quina, surge o MLOps!\n\u0026ldquo;ai is coming for our j-\u0026rdquo;, @internetofshit (via Twitter)\nMLOps - DevOps aplicado ao Aprendizado de M√°quina MLOps √© algo relativamente recente, at√© porque o uso de Machine Learning, pelo menos aqui no Brasil, come√ßou a ser difundido recentemente. Uma necessidade maior em criar aplica√ß√µes que se apoiem nessa nova onda de IA come√ßou a ganhar corpo com as APIs da OpenAI, que poderiam ser usadas para criar um chat bot inteligente ou artes customizadas e instant√¢neas para uma nova campanha de marketing.\nJunto, por√©m, dessa nova vontade, surge (ou deveria surgir) tamb√©m a precau√ß√£o. Cada vez mais n√≥s vemos que grandes IAs generativas foram criadas em bases indevidas [2][3][4] e n√£o devem ter nossa confian√ßa irrestrita, em especial em rela√ß√£o ao uso de dados sens√≠veis [2][5]. No melhor dos casos, uma IA mal implementada pode gerar alguns clicks a mais no seu site, porque os usu√°rios est√£o se divertindo, como aconteceu com o site da Chevrolet de Watsonville (California) [6].\nDiante disso, um questionamento √© natural: \u0026ldquo;ok, se n√£o o chat gpt, o qu√™?\u0026rdquo;.\nE, para responder essa pergunta, existem milhares de alternativas, desde solu√ß√µes propriet√°rias de outras empresas at√© os modelos de c√≥digo aberto e constru√≠dos com aux√≠lio da comunidade. Ao escolher a segunda op√ß√£o, de repente o uso de ferramentas de Machine Learning n√£o √© mais uma chamada de API: agora voc√™ precisa escolher um modelo, treinar ele, hospedar (provavelmente na nuvem) e garantir sua estabilidade.\n√â um trabalho e tanto.\nPara os profissionais das mais diversas √°reas que estavam criando os modelos, toda essa parte p√≥s-modelagem era nebulosa, mas os desenvolvedores de software j√° haviam solucionado esse mesmo problema, embora em outro contexto, ao adotar a metodologia de DevOps!\nA ideia √© simples: automatizar o m√°ximo de processos poss√≠veis, para garantir estabilidade e agilidade na hora de implantar uma solu√ß√£o. Ao inv√©s de vers√µes, passa-se a pensar na pr√°tica do desenvolvimento como um ciclo. Voc√™ deve ter percebido o movimento dos programas deixando de se tornar aplicativos que voc√™ compra, para se tornarem servi√ßos que voc√™ contrata (√© o tal do Software as a Service - SaaS) - isso √©, em partes, consequ√™ncia desse novo modus operandi de DevOps que prev√™ o desenvolvimento cont√≠nuo e gradual!\nOu seja, ao inv√©s da Adobe lan√ßar uma nova vers√£o do Photoshop todo ano, agora ela lan√ßa um servi√ßo de inscri√ß√£o, que √© continuamente monitorado e melhorado pelos desenvolvedores da empresa (com o \u0026ldquo;benef√≠cio\u0026rdquo; adicional - para a empresa - de que agora voc√™ n√£o paga uma vez e √© \u0026ldquo;dono\u0026rdquo; de um software, mas sim tem que pagar todo m√™s uma taxa se n√£o perde acesso √† ele)!\nEssas esteiras de desenvolvimento, como s√£o chamadas em portugu√™s, s√£o norteadas por alguns princ√≠pios b√°sicos:\nIntegra√ß√£o Cont√≠nua: cada mudan√ßa feita por cada desenvolvedor passa por testes autom√°ticos e revis√µes por pares, garantindo assim que a sugest√£o s√≥ ser√° \u0026ldquo;mergeada\u0026rdquo; (ou seja, a mudan√ßa s√≥ ser√° aplicada) caso os principais problemas do c√≥digo sejam identificados e corrigidos. Se cada mudan√ßa sugerida foi testada e validada, a possibilidade de o todo ter problemas √© menor.\nEntrega Cont√≠nua: uma vez que esse c√≥digo √© mergeado no reposit√≥rio central, um fluxo de entrega (ou implanta√ß√£o) √© ativado, de forma que em poucos minutos todos os passos necess√°rios para colocar o c√≥digo em produ√ß√£o s√£o executados de forma autom√°tica.\nMicrosservi√ßos: o servi√ßo do software √© oferecido de forma a ser simples (em termos relativos, n√£o objetivos) e direto, no sentido de fazer melhor, menos tarefas. Esse c√≥digo √©, muitas vezes, implantado na forma de cont√™ineres (Docker) ou aplica√ß√µes aut√¥nomas na nuvem, que n√£o requerem a contrata√ß√£o de um servidor espec√≠fico, podendo ser din√¢micamente escalado conforme a necessidade (serverless).\nInfraestrutura por c√≥digo: ainda na tem√°tica da nuvem, substituir os recursos f√≠sicos da companhia por servidores de um grande provedor te d√° maior liberdade para dimensionar os servi√ßos de forma mais conservadora, sem se preocupar (tanto) na expans√£o e necessidades futuras - Precisa de um pouco mais de mem√≥ria? dois clicks e voc√™ est√° com uma m√°quina mais potente (e uma fatura mais salgada no fim do m√™s). Dessa forma, pode-se gerir a infraestrutura dispon√≠vel aos servi√ßos justamente como se gere um c√≥digo, com versionamento e arquivos de texto, permitindo maior flexibilidade na gest√£o de recursos computacionais.\nMonitoramento cont√≠nuo: todos esses servi√ßos geram dados e logs continuamente com o uso, ent√£o o monitoramento √©, tamb√©m, cont√≠nuo. Dashboards, avisos no Slack e pain√©is de monitoramento viram parte fundamental do trabalho do engenheiro desenvolvendo as solu√ß√µes. Isso contribui com o ciclo de desenvolvimento, pois, assim que um erro √© alertado, o desenvolvedor pode corrigir o c√≥digo e colocar a solu√ß√£o em produ√ß√£o, tudo numa fra√ß√£o m√≠nima de tempo.\nE, independente do assunto, software √© software. N√£o importa se voc√™ est√° desenvolvendo uma aplica√ß√£o de c√°lculo de gastos mensais, um software de reconhecimento facial ou uma pipeline de transforma√ß√£o de dados, tudo isso √© c√≥digo e pode ser gerido usando os princ√≠pios de DevOps - dando surgimento aos conceitos mais \u0026ldquo;nichados\u0026rdquo; de DataOps ou MLOps.\nMas, pra quem serve o MLOps? Bom, a resposta simples e direta √©: para qualquer um que possui aplica√ß√µes de Machine Learning e quer otimiz√°-las conforme as boas pr√°ticas. (tl;dr)\nSe voc√™ est√° satisfeito, basta clicar aqui pra ir pra pr√≥xima se√ß√£o, caso contr√°rio, vamos por partes.\nO livro Practical MLOps, uma das maiores fontes de informa√ß√£o desse texto, faz uma compara√ß√£o com a pir√¢mide de Maslow que eu achei bem interessante. Para aqueles que n√£o conhecem, a pir√¢mide de Maslow define os n√≠veis de necessidade humana: voc√™ precisa garantir √°gua e comida para poder perseguir seguran√ßa. Uma vez que voc√™ j√° se sente seguro constantemente e tem recursos suficientes pra se manter, voc√™ come√ßa a se preocupar com as suas rela√ß√µes sociais, seus v√≠nculos. A ideia √© que um n√≠vel mais alto do pot√™ncial humano s√≥ pode ser atingido a partir do momento em que as suas necessidades mais b√°sicas s√£o garantidas.\nCom MLOps √© a mesma coisa, segundo os autores.\nPractical MLOPs, Noah Gift e Alfredo Deza, 2021.\nO Engenheiro precisa ser proficiente em DevOps e ter as ferramentas e dados √† disposi√ß√£o. N√£o faz sentido querer implementar uma esteira de aprendizado de m√°quina, sem ao menos ter os dados da sua companhia √† disposi√ß√£o para treinar/usar o modelo implantado!\nPrimeiro √© preciso garantir que todas as aplica√ß√µes funcionam e est√£o seguindo o fluxo correto (DevOps). Depois, nos preocupamos com os dados e a qualidade deles, garantindo que as pipelines s√£o est√°veis e entregam dados de qualidade conforme a necessidade do neg√≥cio (DataOps). S√≥ ent√£o nos preocupamos com os modelos de aprendizado de m√°quina (MLOps). Claro, as coisas podem ser constru√≠das paralelamente e n√£o precisam, necessariamente, seguir essa ordem, mas, de forma geral, inverter essa l√≥gica seria como construir um pr√©dio em uma base fr√°gil. Santos fez isso e n√£o deu muito certo\u0026hellip; [7]\nSupondo, ent√£o, que a sua companhia j√° tem essas bases necess√°rias, como fica o time de dados? O Engenheiro de Machine Learning √© par do Cientista de Dados? Eles trabalham juntos para fazer o modelo? Como funciona?\nClaro, eu n√£o tenho todas as respostas. E, mais importante ainda, n√£o existe uma resposta, cada caso √© um caso. Companhias diferentes ter√£o estruturas diferentes, pela pr√≥pria natureza da forma como as coisas s√£o estruturadas.\nMas, na minha vis√£o particular, a rela√ß√£o entre o Cientista de Dados e o Engenheiro de Machine Learning, √© paralela √†quela entre o Analista de Dados e o Engenheiro de Dados.\nSurge um problema de neg√≥cio, o analista de dados entende o problema e quais s√£o os recursos necess√°rios para solucion√°-lo. O engenheiro de dados cria o ETL e disponibiliza os dados para consumo cont√≠nuo. Se for necess√°rio, ele disponibiliza microsservi√ßos para incrementar a solu√ß√£o. O analista pode entregar a dashboard para a √°rea de neg√≥cio, com a certeza de que os dados continuar√£o a ficar dispon√≠veis, por conta do trabalho dos engenheiros.\nAnalogamente: surge um problema de neg√≥cio, o cientista de dados entende o problema e quais s√£o os recursos necess√°rios para solucion√°-lo, talvez desenvolvendo um jupyter notebook com uma an√°lise e modelo preliminares. O Engenheiro de Machine Learning, a partir dessas especifica√ß√µes, vai transformar o notebook em microsservi√ßos conteinerizados com um fluxo de dados limpos e corretos em uma feature store e uma programa√ß√£o de re-treinamento cont√≠nuo, para garantir a qualidade do modelo, mesmo com o fluxo de novos dados. Assim, o cientista tem acesso ao microsservi√ßo do modelo, que pode ser aplicado a novos dados para gerar relat√≥rios e informa√ß√µes estrat√©gicas para a √°rea de neg√≥cio, com a seguran√ßa garantida por todo o processo de DevOps.\nOu seja, a ideia √© a mesma nos dois casos: um dos profissionais cuida da parte mais humana e de neg√≥cio (entender o problema, abstrair a solu√ß√£o necess√°ria, desenvolver os requerimentos, realizar an√°lises) e o outro est√° mais focado na parte t√©cnica (aplicar boas pr√°ticas de DevOps, garantir a estabilidade do processo, monitorar e corrigir erros).\nIsso, claro, no v√°cuo. Na vida real, pode ser que o Cientista de Dados seja bem versado nas pr√°ticas de DevOps e voc√™ nem precise de um Engenheiro de Machine Learning. Pode ser que um Engenheiro de Dados tenha experi√™ncia com aprendizado de m√°quina e, por conta da baixa demanda, possa cuidar de casos ad hoc. A boa e velha m√°xima prevalece sempre: na pr√°tica, a teoria √© outra.\nDesenvolvendo uma aplica√ß√£o de MLOps Agora que voc√™ aprendeu as bases do que √© o MLOps, vamos ao que importa: como aplicar. E nada melhor do que um projetinho simples para iniciar essa jornada!\nTodo o c√≥digo do projeto est√° dispon√≠vel em um reposit√≥rio p√∫blico!\nEvidente que o projeto, simples por for√ßa de sua proposta, n√£o ir√° tocar todos os pontos-chave de MLOps. Ali√°s, pela natureza dessa aplica√ß√£o, talvez nem toque nos pontos principais (ou mais atrativos) da metodologia, afinal, eu estou escrevendo um texto que deve ser concebido, desenvolvido e publicado em um espa√ßo curto e em condi√ß√µes microsc√≥picas, diante do contexto de Big Data. O que isso significa √© que eu n√£o vou conseguir desenvolver pipelines resilientes de dados (at√© porque eu nem os tenho) e nem vou ter tempo para notar bugs e implementar corre√ß√µes din√¢micamente.\nO que eu vou conseguir fazer e, portanto, minha proposta √©: desenvolver uma aplica√ß√£o de s√≠ntese de textos usando um modelo de linguagem de grande escala (do ingl√™s Large Language Model - LLM) com c√≥digo aberto, implantado na nuvem e com um fluxo de CI/CD desenvolvido usando Github Actions.\nVou, tamb√©m, me permitir tomar alguns atalhos. Ao inv√©s de treinar uma LLM do zero, vou aproveitar da plataforma Hugging Face que j√° possui uma grande variedade de modelos prontos, inclusive em portugu√™s, pra poder focar no processo de implanta√ß√£o de um aplicativo √† nuvem. A nuvem escolhida, inclusive, √© a da Google, Google Cloud Plataform (GCP), justamente por conta do free tier ser suficiente para esse projetinho simples.\nO modelo C√≥digo do modelo dispon√≠vel aqui\nTudo come√ßa no hub do Hugging Face, uma grande comunidade de compartilhamento de c√≥digo para aplica√ß√µes de ML. Para quem vem da √°rea de an√°lise de dados, d√° pra pensar como sendo o equivalente do Kaggle. A miss√£o deles, segundo sua pr√≥pria p√°gina, √© democratizar o bom aprendizado de m√°quina.\nNo site existem op√ß√µes de diferentes modelos, bases de dados e at√© uma plataforma para hospedar um aplicativo de ML, permitindo a distribui√ß√£o do seu trabalho. Al√©m da url, √© poss√≠vel acessar os modelos atrav√©s de uma API!\nNa aba de modelos, √© poss√≠vel filtrar entre (pelo menos durante o per√≠odo em que eu escrevo) quase meio milh√£o de op√ß√µes, por fun√ß√£o, linguagem, base de dados, licen√ßa de uso e outras.\nEu optei por fazer dois filtros: como quero implementar uma LLM, o modelo precisa ter sido treinado em portugu√™s, ent√£o eu seleciono aqueles que foram cadastrados nessa l√≠ngua. Isso faz com que a sele√ß√£o de meio milh√£o de modelos caia para um pouco mais de mil. Em seguida, busco por modelos que fa√ßam text classification, isto √©, que \u0026ldquo;compreendam\u0026rdquo; um texto e te informe como o autor estava se sentindo.\nUm texto como \u0026ldquo;Nossa, eu gosto muito de estudar MLOps\u0026rdquo; deve ser entendido como Positivo, outras frases ser√£o negativas ou, at√© mesmo, neutras (pense como seria dif√≠cil distinguir a emo√ß√£o em \u0026ldquo;Isto √© uma batata\u0026rdquo;).\nEsse √© exatamente o tipo de ferramenta que pode ser muito √∫til em pesquisas massivas de opini√£o, como quando pesquisadores analisam tweets para entender como a popula√ß√£o geral est√° se manifestando em rela√ß√£o a um t√≥pico. Imagine, por exemplo, um debate presidencial ao vivo: ao inv√©s de assumir o pesadelo log√≠stico de fazer pesquisas de opini√£o s√©rias em tempo real pela internet para ver como os candidatos est√£o se saindo, basta olhar o que as pessoas est√£o dizendo por livre e espont√¢nea vontade no twitter. Claro, com um volume massivo de dados, ningu√©m vai ficar lendo e avaliando caso-a-caso, o algoritmo faz isso!\nExatamente nesse contexto, escolhi o modelo twitter-xlm-roberta-base-sentiment-finetunned, baseado no modelo RoBERTa do Facebook, criado pelo usu√°rio citizenlab. Como disse, a Hugging Face possui uma API que abstrai muitas das complexidades de usar um modelo de c√≥digo aberto como esse, de forma que, para cham√°-lo programaticamente basta baixar as bibliotecas com o pip e tr√™s linhas de c√≥digo (seguindo a documenta√ß√£o):\nfrom transformers import pipeline sentiment_classifier = pipeline( \u0026#34;text-classification\u0026#34;, model=\u0026#34;citizenlab/twitter-xlm-roberta-base-sentiment-finetunned\u0026#34;, tokenizer=\u0026#34;citizenlab/twitter-xlm-roberta-base-sentiment-finetunned\u0026#34; ) sentiment_classifier(\u0026#34;this is a lovely message\u0026#34;) Ao que devemos receber de resposta algo similar √†:\n\u0026gt; [{\u0026#39;label\u0026#39;: \u0026#39;Positive\u0026#39;, \u0026#39;score\u0026#39;: 0.9918450713157654}] Testando mensagens em portugu√™s, recebo os sentimentos esperados, por exemplo:\nsentiment_classifier(\u0026#34;Nossa, eu gosto muito de estudar MLOps\u0026#34;) \u0026gt; [{\u0026#39;label\u0026#39;: \u0026#39;Positive\u0026#39;, \u0026#39;score\u0026#39;: 0.989}] Ou seja, o modelo tamb√©m funciona bem em portugu√™s!\nA entrega C√≥digo do webapp dispon√≠vel aqui\nCom o modelo em m√£os, podemos come√ßar a pensar em formas de deix√°-lo dispon√≠vel aos usu√°rios. Existem diversas op√ß√µes, desde dashboards e bots at√© webapps; essa √∫ltima sendo a mais comum e, portanto, a minha escolha.\nEm Python existem v√°rias bibliotecas que auxiliam na cria√ß√£o, mas eu optei pela FastAPI, que tem crescido em popularidade e brigando com os pesos pesados da linguagem, Flask e Django. Algo que eu gosto muito dessa biblioteca, e o motivo que me fez escolher ela, √© a gera√ß√£o autom√°tica de uma documenta√ß√£o interativa: ao adicionar /docs no final da url, uma p√°gina HTML autom√°tica √© gerada, com a possibilidade de fazer chamadas aos seus endpoints!\nPra quem j√° usou Flask, a sintaxe do FastAPI √© bem similar:\nfrom fastapi import FastAPI app = FastAPI() @app.get(\u0026#34;/\u0026#34;) def read_root(): return {\u0026#34;Hello\u0026#34;: \u0026#34;World\u0026#34;} A gente come√ßa importando a biblioteca e inst√¢nciando a classe FastAPI, que ser√° respons√°vel por todo boilerplate do aplicativo. A√≠, √© s√≥ quest√£o de ir definindo os endpoints usando fun√ß√µes com o decorador @app.get(\u0026quot;/\u0026quot;), sendo a string o caminho do endpoint e get o tipo de intera√ß√£o.\nCom isso podemos definir uma p√°gina inicial:\n@app.get(\u0026#34;/\u0026#34;) def home(): return { \u0026#34;Apresenta√ß√£o\u0026#34;: \u0026#34;\u0026#34;\u0026#34;Este √© um programa b√°sico para apresentar os conceitos introdut√≥rio de MLOps.\u0026#34;\u0026#34;\u0026#34; } E um endpoint que ativa o modelo:\nfrom transformers import pipeline # https://huggingface.co/citizenlab/twitter-xlm-roberta-base-sentiment-finetunned MODEL_PATH = \u0026#34;citizenlab/twitter-xlm-roberta-base-sentiment-finetunned\u0026#34; SENTIMENT_DICT = {\u0026#34;Neutral\u0026#34;: \u0026#34;Neutro\u0026#34;, \u0026#34;Positive\u0026#34;: \u0026#34;Positivo\u0026#34;, \u0026#34;Negative\u0026#34;: \u0026#34;Negativo\u0026#34;} @app.get(\u0026#34;/sintetize/{text}\u0026#34;) def sintetize(text: str): sentiment_classifier = pipeline( \u0026#34;text-classification\u0026#34;, model=MODEL_PATH, tokenizer=MODEL_PATH ) return { \u0026#34;Classifica√ß√£o\u0026#34;: SENTIMENT_DICT[sentiment_classifier(text)[0][\u0026#34;label\u0026#34;]], \u0026#34;Confian√ßa\u0026#34;: f\u0026#34;{100*sentiment_classifier(text)[0][\u0026#39;score\u0026#39;] :.3f}%\u0026#34;, } Aqui eu estou chamando o pipeline, como sugerido anteriormente, e criando um dicion√°rio de retorno com a tradu√ß√£o do sentimento e a confian√ßa normalizada para uma porcentagem com tr√™s casas decimais.\nO programa √© bem simples, de novo, por proposta, mas √© mais que suficiente para entender os conceitos!\nPara executar o c√≥digo e ser capaz de interagir com o nosso aplicativo, precisamos usar uma das depend√™ncias do FastAPI, o uvicorn. Ent√£o, em um terminal na pasta do c√≥digo, executamos:\nuvicorn app:app --reload Cont√™inerizando o c√≥digo C√≥digo do Dockerfile dispon√≠vel aqui\nTudo que foi construido agora deve ser empacotado em algo homog√™neo. Muitos programadores j√° passaram pela experi√™ncia de compartilhar um c√≥digo com outra pessoa e receber a devolutiva de que n√£o est√° funcionando como deveria, ou algo assim, ao que a cartilha nos manda responder um sonoro: \u0026ldquo;Pois na minha m√°quina estava funcionado\u0026hellip;\u0026rdquo;.\nEm um ambiente de DevOps, isso simplesmente n√£o pode acontecer, se o c√≥digo de produ√ß√£o e o c√≥digo local t√™m comportamentos distintos, os testes e corre√ß√µes locais n√£o podem ser considerados como representativos do ambiente de produ√ß√£o e, portanto, n√£o podem ser implantados de maneira √°gil - e isso faz com que a metodologia perca todo o sentido.\nPra garantir essa paridade foram desenvolvidos os cont√™ineres: em uma simplifica√ß√£o um pouco grosseira s√£o como m√°quinas virtuais super leves que agregam o c√≥digo, suas depend√™ncias e todo o ambiente de execu√ß√£o necess√°rio, exatamente da forma como eles foram definidos pelo programador. Esse √© o poder do Docker: independente da m√°quina, a mesma imagem e o mesmo c√≥digo t√™m o mesmo comportamento. Para quem j√° programa, uma compara√ß√£o que ajuda a entender a funcionalidade s√£o os ambientes virtuais, como o venv do Python, em que voc√™ cria um ambiente apartado do \u0026ldquo;resto\u0026rdquo; da sua m√°quina e pode, assim, garantir que n√£o haver√£o intera√ß√µes danosas entre depend√™ncias!\nA cria√ß√£o do cont√™iner √© feita atrav√©s de um arquivo especial, o Dockerfile, nele s√£o definidas as instru√ß√µes necess√°rias para montar o nosso pacote, tim-tim por tim-tim. Inclusive fica mais f√°cil de entender o Dockefile ao pensar nele como uma receita, mesmo!\nüçú A receita mais simples de macarr√£o poss√≠vel:\nDo pacote de macarr√£o, pegue o macarr√£o e jogue na √°gua fervendo. Adicione sal √† gosto. Deixe um prato √† postos. Coloque o macarr√£o no prato ap√≥s 5 minutos.\nOu, em um Dockerfile, com as instru√ß√µes dispon√≠veis, seria algo assim:\n# Come√ßamos com o pacote FROM pacote_macarr√£o # Vamos \u0026#34;trabalhar\u0026#34; na √°gua em ebuli√ß√£o WORKDIR /panela-com-√°gua-fervendo # Manda o macarr√£o pra √°gua fervendo COPY macarr√£o ./panela-com-√°gua-fervendo/ # Adiciona 4 pitadas de sal RUN adicionar-sal --pitadas 4 # Deixa o prato dispon√≠vel para receber o macarr√£o EXPOSE prato # Aguarda 05 minutos RUN sleep 300 # Tira o macarr√£o da √°gua e o \u0026#34;exp√µe\u0026#34; no prato RUN tira-macarr√£o --colocar-em prato Antes que voc√™ fique com fome, na programa√ß√£o n√≥s precisamos come√ßar de alguma base, tamb√©m. Como disse anteriormente, os cont√™ineres s√£o parecidos com uma m√°quina virtual, isso significa que a gente come√ßa, normalmente, de um sistema operacional. Algumas imagens, nome dado √† essa base, s√£o simplificadas para reduzir o tamanho do cont√™iner com apenas aquilo que √© necess√°rio - por exemplo, se voc√™ vai trabalhar com Python, voc√™ pode usar a imagem do ubuntu ou uma vers√£o simplifica de um sistema linux com os principais componentes do Python j√° instalados - a √∫nica diferen√ßa √© o tamanho.\nEu optei por trabalhar, justamente, com essa imagem simplificada do Python:\n# Imagem 3.11 bullseye do Python (vers√£o enxuta) FROM python:3.11-slim-bullseye # Move todos os arquivos para a pasta \u0026#34;mlops\u0026#34; do sistema operacional do cont√™iner WORKDIR /mlops # Copia os arquivos para dentro do cont√™iner COPY . /mlops/ # Instala as depend√™ncias do c√≥digo RUN pip install --no-cache-dir --upgrade -r /mlops/requirements.txt # Exp√µe a porta 8000 EXPOSE 8000 # Roda um comando para iniciar o uvicorn CMD [\u0026#34;uvicorn\u0026#34;, \u0026#34;main:app\u0026#34;, \u0026#34;--host\u0026#34;, \u0026#34;0.0.0.0\u0026#34;, \u0026#34;--port\u0026#34;, \u0026#34;8000\u0026#34;] Com isso as instru√ß√µes foram montadas, agora sempre que eu quiser replicar esse aplicativo, onde quer que seja, basta eu usar ela e pronto!\nO que eu estou dizendo, em linguagem simples, √©:\nEm uma imagem simplificada e leve do Python, crie a pasta \u0026ldquo;mlops\u0026rdquo;, copie todos os arquivos para ela, instale as depend√™ncias e exponha a porta 8000. Em seguida execute o uvicorn para ativar o webserver.\nGithub (+ actions) C√≥digo do yml dispon√≠vel aqui\nEnt√£o, chegamos √†quele momento gostoso no fim de todo c√≥digo:\ngit add . git commit -m \u0026#34;mensagem super significativa\u0026#34; git push Mas, at√© o momento, tudo que temos √© uma vitrine para as nossas habilidades em Python. Para elevar o nosso projeto √†s alturas (risos), precisamos coloc√°-lo na nuvem. ‚òÅÔ∏è\nExistem muitas ferramentas que fazem esse processo de pegar um c√≥digo de um reposit√≥rio e envi√°-lo para nuvem de forma autom√°tica, sempre que houverem mudan√ßas, como Jenkins, Gitlab ou o pr√≥prio Build, da Google. Eu escolhi a solu√ß√£o pr√≥pria do Github, o Actions, visto que vou hospedar meu c√≥digo l√°. Mas o fluxo de trabalho √© bem parecido, independente da solu√ß√£o: mais uma vez n√≥s criamos uma receita, mas dessa vez seria como as instru√ß√µes para mandar o macarr√£o para a mesa de um cliente, usando um outro tipo de arquivo, o .yml.\nsteps: # Deixa o macarr√£o dispon√≠vel ao gar√ßom - name: Pega o macarr√£o usa: gar√ßom # Usa a comanda para \u0026#34;autentificar\u0026#34; o n√∫mero da mesa - name: Verifica o n√∫mero da mesa do cliente usa: comanda executa: | NUMERO_MESA=ler-comanda # Entrega o macarr√£o pra mesa correta - name: Entrega macarr√£o ao cliente usa: gar√ßom executa: | entrega-macarr√£o --mesa $NUMERO_MESA Infelizmente o .yml n√£o se serve t√£o bem √† simplicidade do exemplo quanto o Dockerfile, ent√£o n√£o vou colocar o fluxo completo aqui no texto, mas, a ideia geral √© a seguinte:\nDefinimos que essa instru√ß√£o ser√° executada toda vez que houver uma altera√ß√£o na main - ou seja, no \u0026ldquo;galho\u0026rdquo; principal do reposit√≥rio. Tudo ser√° executado em uma m√°quina do pr√≥prio Github, com o ubuntu instalado. Pegamos o c√≥digo do reposit√≥rio. Rodamos alguns testes unit√°rios. Instalamos a ferramenta CLI do Google Cloud (gcloud). Subimos o c√≥digo para o Artifact. Criamos uma Cloud Run a partir da imagem que est√° no Artifact. Aqui voc√™ vai notar que eu estou citando pela primeira vez os testes unit√°rios. Como eu comentei quando defini a pr√°tica de DevOps, monitoramento e testes s√£o fundamentais para o desenvolvimento de uma aplica√ß√£o robusta. Neste projeto eu fiz uso de duas ferramentas que auxiliam o desenvolvedor a criar os testes: pytest, para testes unit√°rios, e pylint, para testes de s√≠ntaxe.\nO pylint √© um programa que voc√™ roda enquanto est√° codificando, ele vai checar a s√≠ntaxe do seu c√≥digo e prever alguns problemas \u0026ldquo;√≥bvios\u0026rdquo;, do tipo: \u0026ldquo;Voc√™ est√° usando essa fun√ß√£o, mas ela n√£o √© importada ou definida em lugar nenhum!\u0026rdquo;. Al√©m disso, ela enfor√ßa um padr√£o de qualidade no c√≥digo, como a cria√ß√£o de docstrings junto √† defini√ß√£o de uma fun√ß√£o.\nO pytest, por outro lado, √© usado para criar testes unit√°rios, que s√£o testes individualizados para o funcionamento de partes espec√≠ficas do seu c√≥digo, o que pode complementar muito bem o pylint para garantir a robustez do programa. A cria√ß√£o de testes unit√°rios funciona da seguinte forma: imagine que voc√™ criou uma fun√ß√£o que soma 2 n√∫meros inteiros:\ndef soma(a:int, b:int) -\u0026gt; int: return a+b Se o seu c√≥digo est√° correto, voc√™ espera que, por exemplo, ao fazer 2+2, voc√™ encontre quatro. Ent√£o, voc√™ diz ao c√≥digo: \u0026ldquo;Se assegure de que a resposta da fun√ß√£o soma, quando eu coloco os par√¢metros 2 e 2, seja 4\u0026rdquo;. A forma de fazer isso no Python √© atrav√©s da palavra-chave assert:\ndef test_soma(): assert soma(2,2) == 4 Ao rodar o script nesse novo arquivo criado, se o seu teste passar, voc√™ pode se garantir de que o c√≥digo est√° correto para os usos previstos. Por isso a cria√ß√£o de um processo de testagem extenso √© t√£o importante, quanto mais casos propensos √† falha voc√™ testar e passar, mais certeza pode ter na qualidade e robustez do c√≥digo!\nMas, Pedro, se √© t√£o importante assim, por que voc√™ est√° falando disso s√≥ agora?!\nBem\u0026hellip; √© que os testes do meu c√≥digo foram for√ßados a dar certo. üò•\nComo eu disse, o meu c√≥digo √© extremamente simples e n√£o tem muito como eu test√°-lo de forma significativa sem ativar a API do Hugging Face, que √© bastante pesada, ent√£o achei melhor criar um teste bobo, s√≥ pra mostrar como funciona isso na esteira. Mas, sem d√∫vidas, se voc√™ quer fazer c√≥digo de qualidade e que ser√° implantado em produ√ß√£o, voc√™ deve estudar pytest e testes unit√°rios a fundo!\nDepois de 7 minutos de ansiedade (costuma ser bem mais r√°pido, mas, como eu disse, a API do Hugging Face √© pesada üò¨), nosso c√≥digo saiu do nosso computador e est√° na Cloud Run, para que todos possam acessar!\nConclus√£o Ufa, que jornada, ein?\nEu sempre digo que vou fazer um texto mais curto da pr√≥xima vez, para tentar postar com mais frequ√™ncia, mas a√≠ eu decido fazer um projeto de algumas semanas, com conceitos que n√£o tenho tanta familiaridade e muitas palavras. üòÖ\nDevOps, por√©m, √© um tema que eu tenho me aprofundado cada vez mais, seja no contexto de Machine Learning, como aqui no texto, ou nos contextos de dados e software, e esse projeto me permitiu estudar um pouco mais de Docker e principalmente a parte de implanta√ß√£o autom√°tica na nuvem - que eu penei muito para fazer!\nCreio que eu n√£o fui capaz de ilustrar todos os principais conceitos necess√°rios para colocar um modelo na nuvem de forma segura e robusta, mas, acho que consegui introduzir o tema, afinal, essa aplica√ß√£o que eu criei j√° est√° dispon√≠vel e pode ser acessada por qualquer pessoa, podendo ser √∫til em diversos contextos. Claro, n√£o vou disponibilizar o link de acesso, pois eu respeito minha carteira e n√£o quero ningu√©m enchendo a URL de chamados que ser√£o prontamente cobrados ao fim do m√™s pela Google, mas, em um contexto empresarial, essa aplica√ß√£o poderia ser disponibilizada facilmente e o modelo estaria perfeitamente utiliz√°vel!\nExiste toda uma parte de treinamento, valida√ß√£o cruzada e verifica√ß√£o que, ao usar um modelo pronto, eu n√£o precisei me preocupar, mas na maioria dos casos, quando estamos resolvendo problemas reais, s√£o a parte que mais importa. Apesar disso, existem pilhas e mais pilhas de conte√∫do para quem quer aprender a treinar modelos do zero, enquanto que a parte de implanta√ß√£o e MLOps, como um todo, ainda n√£o √© t√£o difundida, principalmente em portugu√™s. Nesse sentido, acredito ter cumprido com o que me propus!\nTe convido a olhar o c√≥digo, estudar, tentar fazer um fork para replicar este (ou outros) resultados e, como sempre, fico √† disposi√ß√£o pra gente continuar essa conversa l√° no meu LinkedIn!\nCita√ß√µes [1] ChatGPT sets record for fastest-growing user base - analyst note, Krystal Hu (Reuters), 02/02/2023 (Acesso em 26/12/2023).\n[2] A lawsuit claims OpenAI stole \u0026lsquo;massive amounts of personal data,\u0026rsquo; including medical records and information about children, to train ChatGPT, Grace Dean (Business Insider), 29/07/2023 (Acesso em 26/12/2023).\n[3] Child sex abuse images found in dataset training image generators, report says, Ashley Belanger (Arstechnica), 12/20/2023 (Acesso em 26/12/2023).\n[4] Is A.I. Art Stealing from Artists?, Kyle Chayka (The New Yorker), 10/02/2023 (Acesso em 26/12/2023).\n[5] Sharing sensitive business data with ChatGPT could be risky, Michael Hill (CSO), 22/03/2023 (Acesso em 26/12/2023).\n[6] A Chevrolet dealer offered an AI chatbot on its website. It told customers to buy a Ford, Phoebe Wall Howard (USA Today), 19/12/2023 (Acesso em 26/12/2023).\n[7] A hist√≥ria dos edif√≠cios tortos de Santos, Giovana Martino (Arch Daily), 18/04/2022 (Acesso em 26/12/2023).\nFontes What is DevOps?, Microsoft (Acesso em 26/12/2023).\nWhat is DevOps?, AWS (Acesso em 26/12/2023).\nPractical MLOPs, Noah Gift e Alfredo Deza, 2021.\nDocker Documentation, Docker (Acesso em 03/01/2024).\nGoogle Cloud Documentation - Deploying to Cloud Run, Google (Acesso em 05//01/2024).\nFastAPI Reference, FastAPI (Acesso em 03/01/2024).\n","permalink":"https://pfalcao97.githubpages.io/blog/posts/mlops/","summary":"Introdu√ß√£o √â argument√°vel que 2023 foi o ano da Intelig√™ncia Artificial. Pessoas que, como eu, j√° tinham um contato mais pr√≥ximo com a estat√≠stica, em virtude da sua forma√ß√£o acad√™mica, conheciam conceitos que s√£o o \u0026ldquo;feij√£o com arroz\u0026rdquo; de Machine Learning (ML), como regress√£o e otimiza√ß√£o, alguns at√© j√° sabiam sobre a exist√™ncia das IAs generativas, mas poucos realmente possuiam acesso √† tecnologia.\nIsso mudou, principalmente, gra√ßas ao ChatGPT, uma intelig√™ncia artificial generativa desenvolvida pela companhia (ou organiza√ß√£o?","title":"MLOps - Um projeto introdut√≥rio"},{"content":"Introdu√ß√£o Hoje gostaria de propor fazer algo um pouco diferente por aqui, ao inv√©s de explicar algum conceito, eu gostaria de compartilhar como resolvi uma dor no meu trabalho, pois acredito que essa solu√ß√£o possa ajudar iniciantes no SQL com conceitos mais avan√ßados, e pode at√© auxiliar usu√°rios mais experientes que nunca tenham pensado em fazer algo assim.\nO Airflow √© constitu√≠do de quatro elementos principais: Worker, Scheduler, Webserver e Database. Este √∫ltimo √© um banco de metadados do Airflow, inicialmente constru√≠do em SQLite, mas normalmente portado para MySQL ou PostgreSQL, que √©, inclusive, o motor em que me basearei para a constru√ß√£o da query. Nesse banco, est√£o as principais informa√ß√µes de metadados do Airflow, ou seja, dados sobre a pr√≥pria ferramenta.\nO schema dessas tabelas de metadados est√° dispon√≠vel na documenta√ß√£o, mas, uma tabela √© especialmente importante para a nossa tarefa: Dag. Nela, est√£o contidos os dados como o CRON da DAG e se ela est√° ativa e pausada.\nMas a√≠ que est√°, n√≥s, humanos, conseguimos interpretar um c√≥digo CRON com facilidade (depois de um pouco de pr√°tica), mas consultar na tabela de metadados quais s√£o as DAGs que s√£o executadas em um hor√°rio espec√≠fico √© um desafio. Nisso surge a query que quero desenvolver hoje.\nExpress√µes CRON Pra quem nunca teve contato, o c√≥digo CRON (ou apenas CRON) pode ser um pouco intimidador, mas √©, na verdade, bem simples: √© um c√≥digo que sintetiza a informa√ß√£o de frequ√™ncia de atualiza√ß√£o de uma tarefa em uma string com 5 informa√ß√µes, em ordem:\nO Minuto de execu√ß√£o. A Hora de execu√ß√£o. O Dia (do m√™s) de execu√ß√£o. O M√™s de execu√ß√£o. O Dia (da semana) de execu√ß√£o. Sendo que qualquer um desses pode ser ocupado por uma das tr√™s op√ß√µes:\nA. Valores espec√≠ficos (separados por v√≠rgula)\nB. Faixas de valores (separadas por h√≠fen)\nC. Qualquer valor (representado pelo asterisco)\nD. Frequ√™ncias (representado por um n√∫mero (ou o asterisco) dividido por outro n√∫mero)\nA melhor forma de explicar, nesse caso, √© com exemplos.\nVamos criar um CRON que execute todos os dias, √†s 09:20h e √†s 18:20: Como a ativa√ß√£o acontece todos os dias, qualquer valor para o dia do m√™s, dia da semana e m√™s s√£o considerados, portanto preenchemos eles com o asterisco. A hora e o minuto, por outro lado, s√£o valores espec√≠ficos:\nMinuto: 20 Hora: 9,18 Dia (do m√™s): * M√™s: * Dia (da semana): * E, portanto, escrevemos o CRON da seguinte forma:\n20 9,18 * * * Agora um exemplo um pouco mais completo: a a√ß√£o deve ser executada todas as segundas-feiras, no in√≠cio de cada hora par √† partir das 06 da manh√£. Nesse caso, precisamos colocar segunda-feira no √∫ltimo espa√ßo (os dias da semana come√ßam no domingo, cujo valor √© 0, e terminam no s√°bado, valor 6), por√©m o dia do m√™s e o m√™s podem ser mantidos como \u0026ldquo;qualquer valor\u0026rdquo;. Para fazer essa execu√ß√£o peri√≥dica, usamos a barra, portanto escrever */2 equivale √† dizer \u0026ldquo;come√ßando no zero, execute √† cada duas horas\u0026rdquo;, mas desejamos come√ßar √†s 06h, portanto, basta substituir o asterisco por 6:\nMinuto: 0 Hora: 6/2 Dia (do m√™s): * M√™s: * Dia (da semana): 1 Ou, no formato de CRON:\n0 6/2 * * 1 Esse b√°sico √© suficiente pra gente come√ßar a desenvolver a query, mas existem mais exemplos complexos e outras possibilidades. Para testar o seu entendimento, √© poss√≠vel utilizar o site Crontab Guru para consultar o significado de diferentes c√≥digos.\nA query Como disse, o CRON √© uma s√≠ntese, ele transmite uma informa√ß√£o em um formato denso, o que, nesse caso, facilita a interpreta√ß√£o humana, mas dificulta a consulta. Imagine, por exemplo, a dor de cabe√ßa que √© pra ordenar uma lista de tarefas em ordem de execu√ß√£o.\nDe forma manual voc√™ precisa identificar todas as tarefas, traduzir as express√µes para frequ√™ncia de atualiza√ß√£o e organizar. Mas, principalmente em uma opera√ß√£o madura, s√£o centenas de DAGs, muito al√©m do que qualquer engenheiro consegue manter na caixola. Pois ent√£o surge a necessidade de ser capaz de criar um c√≥digo capaz de organizar a tal tabela de de metadados do Airflow, ordenando as DAGs em rela√ß√£o √† ordem de execu√ß√£o delas!\nCome√ßando do come√ßo: precisamos garantir que todos as colunas sejam, de fato, c√≥digos CRON. Como a tabela de metadados √© gerada autom√°ticamente pelo Airflow, n√£o precisamos nos preocupar com valores nulos ou erros de digita√ß√£o (a n√£o ser que esteja errado na DAG tamb√©m, mas isso acho que √© um problema maior), apesar disso o Airflow possui algumas express√µes simplificadas, escritas em ingl√™s. O primeiro passo √© traduzi-las:\nExpress√£o CRON correspondente Interpreta√ß√£o @once - Uma √∫nica vez @hourly 0 * * * * De hora em hora @daily 0 0 * * * Todo dia @weekly 0 0 * * 0 Toda semana @monthly 0 0 1 * * Todo m√™s @yearly 0 0 1 1 * Uma vez ao ano Para fazer isso, eu uso um CASE-WHEN simples:\nSELECT dag_id, CASE WHEN schedule_interval = \u0026#39;@once\u0026#39; THEN null WHEN schedule_interval = \u0026#39;@hourly\u0026#39; THEN \u0026#39;0 * * * *\u0026#39; WHEN schedule_interval = \u0026#39;@daily\u0026#39; THEN \u0026#39;0 0 * * *\u0026#39; WHEN schedule_interval = \u0026#39;@weekly\u0026#39; THEN \u0026#39;0 0 * * 0\u0026#39; WHEN schedule_interval = \u0026#39;@monthly\u0026#39; THEN \u0026#39;0 0 1 * *\u0026#39; WHEN schedule_interval = \u0026#39;@yearly\u0026#39; THEN \u0026#39;0 0 1 1 *\u0026#39; ELSE schedule_interval END AS schedule_interval FROM dag Note que o c√≥digo √© uma string!\nComo a query vai ficar bem extensa, vou focar apenas nas duas colunas imediatamente relevantes: dag_id, que √© o nome da DAG, e schedule_interval, que √© o CRON, mas posteriormente, quando formos discutir o uso real dessa query, algumas outras colunas ser√£o importantes, como a informa√ß√£o sobre se a DAG est√° ativa ou despausada.\nAgora que garantimos que a coluna est√° homog√™nea, podemos transform√°-la!\nFelizmente, as express√µes s√£o separadas por espa√ßos sempre, ent√£o n√≥s podemos usar isso √† nosso favor: a fun√ß√£o split_part, do PostgreSQL, recebe tr√™s par√¢metros:\nsplit_part( coluna, -- Nome da coluna a ser separada separador, -- Caracter utilizado para fazer a separa√ß√£o posi√ß√£o -- Posi√ß√£o do fragmento que voc√™ quer recuperar ) Como j√° disse antes, as express√µes CRON s√£o formadas por cinco espa√ßos. ent√£o repetimos essa fun√ß√£o cinco vezes, para recuperar cada uma das informa√ß√µes. Outra informa√ß√£o que comentei √© que, al√©m do asterisco, tamb√©m podemos encontrar a barra, \\, a v√≠rgula, , e o h√≠fen -.\nLidaremos com a barra e o h√≠fen depois, mas a v√≠rgula ser√° relevante imediatamente.\nEmbora, sim, estamos representando uma frequ√™ncia no tempo e ordenaremos a lista de DAGs conforme a sua pr√≥xima execu√ß√£o, optei por n√£o tratar as unidades de tempo como unidades de tempo, mas sim como n√∫meros inteiros, INTEGER. Mais do que isso: listas de n√∫meros inteiros. E a√≠ que vem o pulo do gato, para fazer a query funcionar, a gente precisa decompor cada uma dessas cinco informa√ß√µes nas listas de n√∫meros que elas est√£o tentando emular!\nNo caso em que a informa√ß√£o √© um conjunto de valores espec√≠ficos, fica mais f√°cil, j√° que o elefantinho azul nos fornece uma fun√ß√£o relevante pra isso: string_to_array. Como o nome sugere, uma string √© transformada em uma lista, usando um separador, caso n√£o exista nenhuma inst√¢ncia desse separador na string, o retorno √© uma lista unit√°ria.\nstring_to_array( coluna, -- Coluna √† ser dividida, de tipo textual separador -- Caracter utilizado para fazer a separa√ß√£o ) Note que a resposta dessa fun√ß√£o √© sempre uma lista textual, e nem adianta tentar transformar ele numa lista de inteiros ainda, porque a maioria dos elementos ser√£o listas unit√°rias com asteriscos, {*}. Pois ent√£o, pra segunda fase da transforma√ß√£o, temos:\nWITH base AS ( SELECT dag_id, schedule_interval, string_to_array(split_part(schedule_interval, \u0026#39; \u0026#39;, 1), \u0026#39;,\u0026#39;) as minuto, string_to_array(split_part(schedule_interval, \u0026#39; \u0026#39;, 2), \u0026#39;,\u0026#39;) as hora, string_to_array(split_part(schedule_interval, \u0026#39; \u0026#39;, 3), \u0026#39;,\u0026#39;) as dia_mes, string_to_array(split_part(schedule_interval, \u0026#39; \u0026#39;, 4), \u0026#39;,\u0026#39;) as mes, string_to_array(split_part(schedule_interval, \u0026#39; \u0026#39;, 5), \u0026#39;,\u0026#39;) as dia_semana, FROM (SELECT dag_id, CASE WHEN schedule_interval = \u0026#39;@once\u0026#39; THEN null WHEN schedule_interval = \u0026#39;@hourly\u0026#39; THEN \u0026#39;0 * * * *\u0026#39; WHEN schedule_interval = \u0026#39;@daily\u0026#39; THEN \u0026#39;0 0 * * *\u0026#39; WHEN schedule_interval = \u0026#39;@weekly\u0026#39; THEN \u0026#39;0 0 * * 0\u0026#39; WHEN schedule_interval = \u0026#39;@monthly\u0026#39; THEN \u0026#39;0 0 1 * *\u0026#39; WHEN schedule_interval = \u0026#39;@yearly\u0026#39; THEN \u0026#39;0 0 1 1 *\u0026#39; ELSE schedule_interval END AS schedule_interval FROM dag) AS tradutor_cron) Para fechar o pacotinho eu peguei aquele primeiro segmento do c√≥digo e coloquei dentro de uma subquery, pra poder fazer a consulta em cima dele. Notem que, al√©m disso, adicionei todo o c√≥digo √† uma CTE, para reduzir o tamanho do c√≥digo. Isso significa que todo esse segmento de c√≥digo agora √© \u0026ldquo;funcionalmente\u0026rdquo; uma tabela, que ser√° chamada usando o nome base, me permitindo omitir esse peda√ßo.\nAgora, n√£o tem mais pra onde correr, precisamos falar dos outros casos, e isso inclui dois t√≥picos mais avan√ßados: RegEx e Geradores. Caso voc√™ n√£o conhe√ßa muito de RegEx, recomendo a leitura de um texto que escrevi aqui no blog, que faz uma introdu√ß√£o bem suave ao t√≥pico. Sobre os geradores, vou fazer uma breve introdu√ß√£o:\nO PostgreSQL (bem como outros motores de SQL) √© capaz de gerar listas de alguns tipos de vari√°veis, como datas e, mais importante no nosso caso, n√∫meros, usando os geradores, ou fun√ß√µes que retornam listas, a anatomia dessas fun√ß√µes √© simples:\ngenerate_series( start, -- In√≠cio da lista stop, -- Fim da lista step -- Passo da lista ) Setando, por exemplo, start = 1, stop = 5 e step = 1 (ou vazio, visto que 1 √© o valor padr√£o), ir√≠amos gerar a lista {1,2,3,4,5}. Eu j√° passei o mandrake do c√≥digo, iremos decodificar as informa√ß√µes em listas de inteiros, pois bem, essas listas s√£o (ou, pelo menos, come√ßam sendo) todos os valores poss√≠veis que aquela informa√ß√£o pode tomar: dentre uma hora, existem 60 minutos, isso significa que a informa√ß√£o \u0026ldquo;Minuto\u0026rdquo; pode tomar os valores 0, 1, 2,\u0026hellip;, 58, 59. Isso pode ser desenvolvido muito facilmente usando a fun√ß√£o generate_series:\nWITH lista_auxiliar_minutos AS ( SELECT generate_series(0, 59) as auxilair ) Para as demais unidades de tempo, a simplicidade se mant√©m: basta entender quais s√£o os valores poss√≠veis que aquela unidade de tempo pode assumir e gerar uma s√©rie com isso. Aqui, por√©m, surge o maior problema em usar n√∫meros, ao inv√©s de datas: no dia do m√™s, a lista gerada √© de 1 a 31, por√©m, obviamente, nem todos os meses t√™m 31 dias. Isso significa que essa solu√ß√£o √© apenas aproximada. A depender de como voc√™ vai usar esse c√≥digo, isso n√£o vai te impactar, mas, √© uma limita√ß√£o importante de se ter em mente!\nContinuando as demais listas:\nlista_auxiliar_horas AS ( SELECT generate_series(0,23) as aux ), lista_auxiliar_dias_mes AS ( SELECT generate_series(1,31) as aux ), lista_auxiliar_meses AS ( SELECT generate_series(1,12) as aux ), lista_auxiliar_dias_semana AS ( SELECT generate_series(0,6) as aux -- 0 √© domingo. ), Note que eu gerei, mais uma vez, essas listas em CTEs. Fiz isso por um motivo bastante pessoal: a aplica√ß√£o que eu usei pra fazer essa consulta n√£o tinha acesso de administrador ao banco, isso significa que ela n√£o poderia criar fun√ß√µes, que seriam a forma como eu preferiria fazer todas essas transforma√ß√µes (ficaria bem mais organizado). O c√≥digo seria o mesmo, apenas a estrutura que seria mais organizada!\n","permalink":"https://pfalcao97.githubpages.io/blog/posts/airflow_sql/","summary":"Introdu√ß√£o Hoje gostaria de propor fazer algo um pouco diferente por aqui, ao inv√©s de explicar algum conceito, eu gostaria de compartilhar como resolvi uma dor no meu trabalho, pois acredito que essa solu√ß√£o possa ajudar iniciantes no SQL com conceitos mais avan√ßados, e pode at√© auxiliar usu√°rios mais experientes que nunca tenham pensado em fazer algo assim.\nO Airflow √© constitu√≠do de quatro elementos principais: Worker, Scheduler, Webserver e Database.","title":"Consultando DAGs por hor√°rio no SQL"},{"content":"Introdu√ß√£o A matem√°tica √© l√≥gica, por defini√ß√£o. Mas isso n√£o significa que ela seja √≥bvia e, muito menos, intuitiva. Inclusive, muitas vezes, ela √© t√£o pouco √≥bvia e intuitiva, que nos parece n√£o-l√≥gica. E isso, por si s√≥, √© nada intuitivo!\nTanto √©, que existe um campo de estudo inteiro dedicado a tratar o ser humano como ente plenamente l√≥gico e racional - a economia - que foi virado de cabe√ßa pra baixo quando dois psic√≥logos chegaram e falaram \u0026ldquo;Ei, galera, n√£o √© bem assim\u0026hellip;\u0026rdquo;. A revolu√ß√£o foi t√£o profunda que mereceu at√© um pr√™mio Nobel.\nHoje eu quero falar um pouco de algumas fal√°cias l√≥gicas que nos levam a conclus√µes erradas, a partir de premissas enviesadas, mesmo sem perceber, e uma ferramenta que pode nos ajudar a interpretar o mundo nessas condi√ß√µes, a estat√≠stica bayesiana.\nL√≥gica Defini√ß√£o do minidicion√°rio da l√≠ngua portuguesa, Silveira Bueno:\nL√≥gica: (Substantivo feminino)\nCi√™ncia que estuda as leis do racioc√≠nio; coer√™ncia; racioc√≠nio.\nExistem muitas palavras que t√™m uma defini√ß√£o clara, por√©m o uso no dia-a-dia acaba raptando e transformando seu significado. L√≥gica √© uma dessas. A express√£o \u0026ldquo;√â l√≥gico\u0026rdquo;, ao inv√©s de significar \u0026ldquo;tem coer√™ncia com as premissas b√°sicas adotadas no seu racioc√≠nio\u0026rdquo;, √© normalmente utilizada para definir algo que √© √≥bvio, elementar.\nMas essas duas coisas (o √≥bvio e o coerente) n√£o t√™m, necessariamente, algo em comum. N√£o me leve a mal: deveriam ter, mas, quantas vezes voc√™ j√° teve certeza de algo? Pode ser algo que comp√µe fundamentalmente sua maneira de ver o mundo, como uma ideologia pol√≠tica, ou algo trivial, como a certeza de que seu amigo est√° te evitando.\nE quantas dessas vezes a certeza se desintegrou depois de uma explica√ß√£o? Seu amigo n√£o estava te evitando, ele s√≥ estava ocupado no trabalho e, portanto, n√£o conseguiu responder os 20 tik toks que voc√™ mandou para ele no per√≠odo de 2 horas, no meio da tarde.\nA pr√≥pria pr√°tica da psicoterapia est√° muito calcada nisso: √†s vezes, s√≥ de colocar seus pensamentos (que parecem √≥bvios e corretos) em palavras, voc√™ consegue identificar premissas erradas e saltos l√≥gicos. Mas nem sempre esse reconhecimento √© f√°cil.\nImagine a seguinte descri√ß√£o de uma mulher, Linda:\nLinda tem 31 anos de idade, √© solteira, franca e muito inteligente. √â formada em filosofia. Quando era estudante, preocupava-se profundamente com quest√µes de discrimina√ß√£o e justi√ßa social, e tamb√©m participava de manifesta√ß√µes antinucleares.\nAp√≥s ler essa descri√ß√£o, voc√™ deve inferir qual sobre a sua situa√ß√£o atual: Ser√° que ela trabalha como professora? Ser√° que √© banqueira, ou trabalha numa livraria? Ela participa do movimento feminista? Ela faz ioga?\nDiante de v√°rias op√ß√µes, muitas pessoas atribuem uma probabilidade maior a Linda ser uma banqueira feminista do que apenas uma banqueira. Ou seja, o estere√≥tipo criado na sua descri√ß√£o, uma pessoa mais alinhada com ideais progressistas, √© t√£o forte que faz com que muitos ignorem a regra l√≥gica de que para ser feminista e banqueira, ela deve, necessariamente, ser banqueira, por mais que te pare√ßa muito mais prov√°vel que ela seja feminista, do que banqueira.\nAssim surge a fal√°cia da conjun√ß√£o: o ato de considerar eventos conjugados como mais prov√°veis do que qualquer um dos eventos individuais que o comp√µe, em uma compara√ß√£o direta. Ningu√©m diz que √© mais prov√°vel tirar cara e depois coroa, ao lan√ßar uma moeda duas vezes, do que tirar s√≥ cara, ao lan√ßar uma √∫nica vez, mas quando damos uma contextualiza√ß√£o maior ao problema, a estat√≠stica se confunde com os nossos vieses.\nEssa foi uma das descobertas da dupla de psic√≥logos, Daniel Kahneman e Amos Tversky.\nAo longo de uma frut√≠fera carreira cient√≠fica, eles desenvolveram in√∫meros experimentos e, com eles, artigos, que iriam quebrar muitos dos paradigmas das ci√™ncias comportamentais. Seus trabalhos s√£o extremamente influentes at√© hoje e foram premiados com o Nobel de Economia em 2002 - Por conta do falecimento de Amos em 1996, Daniel recebeu o pr√™mio sozinho.\nR√°pido e Devagar ‚úèÔ∏è Mais recentemente, Daniel escreveu o livro R√°pido e Devagar, que virou um best-seller, contando sobre o seu entendimento do funcionamento da mente √† partir de todo arcabou√ßo que a psicologia cognitiva desenvolveu desde ent√£o - sempre muito bem ilustrado com exemplos tirados diretamente dos seus experimentos, como √© o caso da Linda!\nTamb√©m √© o caso do experimento que me motivou a escrever o texto: A escolha profissional de Tom W..\nEm alguns lugares no exterior, como nos Estado Unidos, ao final do Ensino M√©dio, √© comum que professores escrevam cartas de recomenda√ß√£o para universidades, descrevendo as qualidades de um aluno particular - Esperan√ßosamente motivando sua entrada em tal universidade. Eis um trecho de uma dessas cartas que foi escrita para um aluno em particular, Tom W.:\nTom √© dotado de grande intelig√™ncia, embora care√ßa de criatividade genu√≠na. Tem necessidade de ordem e clareza e de sistemas claros e ordenados em que cada detalhe encontre seu lugar apropriado. Seu texto est√° mais para ma√ßante e mec√¢nico, animado ocasionalmente por alguns trocadilhos batidos e lampejos de imagina√ß√£o do tipo fic√ß√£o cient√≠fica. Exibe forte compuls√£o por compet√™ncia. Parece apresentar pouca compreens√£o e pouca simpatia pelas outras pessoas,e n√£o aprecia a intera√ß√£o com os outros. Autocentrado, exibe no entanto um profundo senso moral.\nN√£o h√° nada de especial em Tom, ele foi um aluno escolhido aleatoriamente em uma universidade, para exemplificar o experimento. A universidade que ele estuda oferece os seguintes cursos:\nAdministra√ß√£o Ci√™ncia da computa√ß√£o Engenharia Humanidades e educa√ß√£o Direito Medicina Biblioteconomia Ci√™ncias f√≠sicas e biol√≥gicas Ci√™ncia social e assist√™ncia social Se voc√™ tivesse que ordenar os cursos acima, do mais prov√°vel para o menos prov√°vel de ser o curso de Tom, como ficaria sua lista?\nSupondo que voc√™ tenha realmente listado (e eu espero que sim, pois √© uma boa forma de entender o que ser√° explicado a seguir), pode ter acontecido duas coisas:\nVoc√™ ordenou com base no estere√≥tipo do curso e no texto do professor. Voc√™ n√£o ordenou, porque est√° faltando uma informa√ß√£o. R√°pido e devagar √© como Daniel descreve os dois sistemas que agem no nosso c√©rebro, o sistema 1 √© r√°pido e autom√°tico, o sistema 2 √© lento e deliberado. Se voc√™ respondeu da primeira forma, voc√™ usou o sistema 1 para substituir a pergunta, ao inv√©s de responder a pergunta (dif√≠cil) da probabilidade por curso, o seu c√©rebro escolheu responder a pergunta (f√°cil) de \u0026ldquo;qual desses cursos tem o estere√≥tipo que mais corresponde com a personalidade descrita?\u0026rdquo;. Enquanto que, para responder a pergunta corretamente, seria necess√°rio saber as taxas de incid√™ncia de cada curso na universidade, que √© o que voc√™ deve ter pensado, caso tenha respondido da segunda forma - usando seu sistema 2!\nE antes de voc√™ considerar a conclus√£o acima injusta, veja a seguinte quest√£o, bastante similar:\nEu tenho um pote com 100 bolinhas, na seguinte distribui√ß√£o: 10 bolinhas vermelhas, 40 bolinhas verdes e 50 bolinhas azuis. Ordene as cores da mais prov√°vel para a menos prov√°vel de ser a cor de uma bolinha tirada ao acaso.\nSe voc√™ tiver um conhecimento b√°sico de probabilidade, deve ter feito a seguinte lista: Azul (50% de probabilidade), Verde (40%) e Vermelho (10%). Por que com Tom W. seria diferente? Voc√™ nem sabe se a descri√ß√£o do professor √© certeira!\nO progn√≥stico por representatividade √© a forma como n√≥s focamos nas representa√ß√µes individuais, em detrimento da distribui√ß√£o de ocorr√™ncia do fen√¥meno. √â claro que a descri√ß√£o individual pode fornecer informa√ß√µes importantes, mas ainda assim, ao inv√©s de substituir a probabilidade basal, o ideal √© que ela a atualize.\nA estat√≠stica Bayesiana Vamos voltar ao exemplo das bolinhas. A distribui√ß√£o das cores no pote √© a mesma, mas, dentre as bolinhas vermelhas, 80% t√™m uma linha preta desenhada, dentre as verdes, 40% t√™m a mesma linha, e dentre as azuis, apenas 20%.\nSe eu adicionar que a bolinha tirada tamb√©m possui o mesmo desenho, como isso muda a ordem de cores mais prov√°veis? Bom, vamos fazer uma contagem:\nExistem 8 bolinhas vermelhas com listras (80% de 10). Existem 16 bolinhas verdes com listras (40% de 40). Existem 10 bolinhas azuis com listras (20% de 50). Ent√£o, agora nosso espa√ßo amostral n√£o √© mais 100, mas 34 (8+16+10), e a ordem deve ser: Verde (47% de probabilidade), Azul (29,5%) e Vermelho (23,5%). A presen√ßa da listra n√£o descartou completamente a distribui√ß√£o de cores anterior - apenas atualizou as probabilidades. O mesmo deveria ter acontecido com Tom.\nDigamos que no ano de entrada de Tom na faculdade existam 200 alunos de administra√ß√£o e 20 de Engenharia, por mais que a descri√ß√£o de Tom seja compat√≠vel com 100% dos estudantes de engenharia (nota do autor: posso confirmar) e apenas 10% dos estudantes de administra√ß√£o - a probabilidade ainda √© 50/50, porque representam 20 estudantes de engenharia e 20 de administra√ß√£o!\n√â justamente esse princ√≠pio b√°sico que norteia toda a estat√≠stica bayesiana.\nThomas Bayes foi um pastor presbiteriano ingl√™s que viveu no s√©culo XVIII. Entre rezas, o professo desenvolveu uma teoria para a probabilidade condicional, ou seja, como saber a probabilidade de que algo aconte√ßa, sabendo que uma outra coisa j√° aconteceu. Formulando matematicamente o Teorema de Bayes, ficaria assim:\n$$ P(A|B) = \\frac{P(B|A) P(A)}{P(B)}$$\nOu, em portugu√™s: A probabilidade de que aconte√ßa o evento A, sabendo que j√° aconteceu o evento B, P(A|B), √© igual √† probabilidade de que aconte√ßa A, P(A), vezes a probabilidade de que aconte√ßa B, dado que A j√° aconteceu, P(B|A), dividido pela probabilidade de que aconte√ßa B, P(B). Podemos pensar na f√≥rmula como uma propor√ß√£o: De todas as vezes que B acontece, quantas acontecem depois de A? Pegue esse n√∫mero e multiplique pela probabilidade de A, chegando assim ao valor atualizado!\nPode parecer confuso, explicando assim, mas a gente acabou de fazer esse exato exemplo, com as bolinhas coloridas.\nVamos reorganizar o enunciado, para ficar mais claro:\nQual a probabilidade de que uma bolinha com listras, escolhida aleatoriamente do pote, seja azul?\nAplicamos Bayes!\nP(azul|listra): esse √© o valor que queremos encontrar, a probabilidade de que uma bolinha listrada seja azul. P(azul): anteriormente vimos que, das 100 bolinhas no pote, 50 s√£o azuis. Portanto essa probabilidade √© 50%. P(listra|azul): aqui, queremos saber qual a probabilidade de que uma bolinha azul seja listrada. Isso tamb√©m foi dado pelo problema, como apenas 20% das bolinhas azuis s√£o listradas, essa probabilidade √©, tamb√©m, 20%. P(listra): As bolinhas listradas s√£o 8 vermelhas, 16 verdes e 10 azuis - 34 no total. Portanto, dividimos pelo n√∫mero total de bolinhas, 100, e encontramos que essa probabilidade √© de 34%. Basta colocar tudo na f√≥rmula acima e voil√†!\n$$ P(azul|listra) = \\frac{P(listra|azul) P(azul)}{P(listra)} = \\frac{0,2 \\times 0,5}{0,34} = 0,294 $$\nParab√©ns, voc√™ acabou de reencontrar o mesmo n√∫mero, s√≥ que de forma muito mais dif√≠cil. Brincadeiras a parte, n√£o √© a toa que o teorema de Bayes √© chamado de \u0026ldquo;bom senso aplicado √† matem√°tica\u0026rdquo;, √© uma boa forma de garantir que seu pensamento √© coerente - particularmente nos casos mais complicados de fazer uma verifica√ß√£o simples!\nXKCD N¬∫ 1132: Frequentistas vs. Bayesianos. Verdadeiramente, bom senso aplicado.\nUm bom caso de estudo para esse ramo da estat√≠stica est√° relacionado aos testes m√©dicos, como os testes de COVID, que tanto nos acostumamos a fazer nos √∫ltimos anos. Mas n√£o √© s√≥ nisso que o bom pastor pode te ajudar, ele tamb√©m pode aumentar suas chances de conseguir um carro novo*!\n* Essa situa√ß√£o √© bastante espec√≠fica, qualquer n√£o obten√ß√£o de um ve√≠culo novo n√£o √© responsabilidade do autor ou do pastor.\nComo interpretar um teste positivo? Temos o costume de ver testes m√©dicos como senten√ßas: Se o resultado deu positivo, n√≥s temos a doen√ßa ou condi√ß√£o que o exame estava testando. Mas isso n√£o √© t√£o preto no branco - tanto √© que m√©dicos normalmente pedem para voc√™ repetir exames com resultados inesperados, em especial para condi√ß√µes que tenham consequ√™ncias mais graves.\nNormalmente, n√≥s s√≥ pensamos em um √∫nico n√∫mero, a acur√°cia do teste, mas, no fundo, durante os testes cl√≠nicos s√£o computados quatro n√∫meros relevantes:\nVerdadeiro Falso Positivo O teste identificou a doen√ßa corretamente O teste identificou a doen√ßa erroneamente Negativo O teste n√£o identificou a doen√ßa quando n√£o deveria O teste n√£o identificou a doen√ßa quando deveria Em especial, focamos em testes sens√≠veis: √© melhor um alarme falso, resolvido facilmente com um segundo teste, do que n√£o identificar casos em que a doen√ßa est√° presente, agravando o quadro. Isso gera um n√∫mero de Falsos Positivos comumente maior do que o n√∫mero de Falsos Negativos e, ambos, se tudo estiver certo, bastante menores do que os resultados verdadeiros.\nPense em uma doen√ßa que afete 1 a cada 1000 pessoas no seu grupo - Doen√ßas raramente podem ser tratadas como homog√™neas na popula√ß√£o. Poder√≠amos, de forma simplificada, assumir que voc√™ tem 1/1000 chances de pegar a doen√ßa, portanto a probabilidade de voc√™ estar com a doen√ßa √© de 0,1%. Mas a m√©dica que est√° te atendendo √© uma pessoa cautelosa, e te pede para fazer um teste mesmo assim.\nLendo o manual de uso, voc√™ v√™ que os testes cl√≠nicos foram feitos em 2000 pessoas, das quais 50 estavam doentes. Nesses testes, a sensibilidade foi de 96% e a especificidade foi de 90%. Ap√≥s uma r√°pida pesquisa, voc√™ v√™ que sensibilidade √© uma outra palavra para o Verdadeiro Positivo e especificidade, outra palavra para Verdadeiro Negativo, ent√£o, voc√™ reconstr√≥i a tabela com os n√∫meros do teste:\nVerdadeiro Falso Positivo 0,96 (Sensibilidade) 0,1 (1 - Especificidade) Negativo 0,90 (Especificidade) 0,04 (1 - Sensibilidade) Note que a probabilidade de ser verdadeiro ou falso deve ser 100%, por isso que a taxa de falsos negativos deve ser 100% menos a sensibilidade. Isso pode ficar mais claro usando n√∫meros: Se o teste tem uma taxa de verdadeiros positivos de 96%, significa que das 50 pessoas que est√£o doentes, o teste ir√° identificar corretamente 48 e deixar√° de identificar 2, fazendo com que essas sejam as falsas negativas, conta similar ocorre para a especificidade.\nVerdadeiro Falso Positivo 48 pessoas 195 pessoas Negativo 1.755 pessoas 2 pessoas Depois de fazer o mise en place, voc√™ faz o teste e verifica que ele d√° positivo. Em qual grupo voc√™ est√°? No das 48 pessoas que realmente t√™m a doen√ßa, ou na das 195 que n√£o t√™m? Bom, isso quem ir√° dizer √© a profissional da sa√∫de, mas voc√™ pode aquietar um pouco a ansiedade, atualizando aquela probabilidade de 0,1% usando a f√≥rmula de Bayes: Qual a probabilidade de que voc√™ esteja doente, ao receber um teste positivo, P(doente|positivo)?\nP(doente): essa √© a probabilidade que chamamos √† priori, ou seja, antes do teste. Nesse caso era de 0,1%. P(positivo|doente): Aqui tratamos da probabilidade de, estando doente, seu teste ser positivo - Em outras palavras, a sensibilidade do teste: 96%. P(positivo): Por fim, a probabilidade do teste dar positivo. Aqui √© √∫til a constru√ß√£o da tabelinha: Dos 2.000 volunt√°rios, 48 foram verdadeiros positivos e 195, falsos positivos, portanto a probabilidade √© (48 + 195)/2000, 12,15%. Assim, aplicando os n√∫meros √† f√≥rmula:\n$$ P(doente|positivo) = \\frac{P(positivo|doente) P(doente)}{P(positivo)} = \\frac{0,96 \\times 0,001}{0,1215} = 0,0079 $$\nOu seja, embora o teste aumente em quase 8 vezes sua chance de ter a doen√ßa, a grande propor√ß√£o de falsos positivos para verdadeiros positivos significa que, ao positivar o teste, a probabilidade de ser um resultado falso √© alta. Significando que n√£o √© uma senten√ßa, mas uma atualiza√ß√£o de probabilidade. Claro, se voc√™ continuar fazendo testes e o resultado continuar sendo positivo, sua chance de ter a doen√ßa aumenta bastante: No segundo positivo, 6,24% e no terceiro, 49,3%. Isso motiva a realiza√ß√£o de mais testes!\nO problema de Monty Hall Agora, vamos falar do tal carro novo. Mas, antes, eu preciso te preparar: acontece que a situa√ß√£o a seguir √© pol√™mica - causou acaloradas cartas e rea√ß√µes de professores de estat√≠stica, quando foi enunciada pela primeira vez, e causou uma acalorada discuss√£o entre eu e minha namorada, quando eu contei pra ela sobre o problema. Prossiga com cuidado ‚ö†Ô∏è.\nTudo come√ßa com um quadro de perguntas e respostas em uma revista americana chamado Ask Marilyn. Marilyn vos Savant, reverenciada pelo seu QI alt√≠ssimo, respondia d√∫vidas gerais dos leitores, pense em algo como um google-antes-do-google. Em certo momento chega a seguinte pergunta, inspirada em um famoso programa de TV, Let\u0026rsquo;s make a Deal, apresentado por um carism√°tico host, Monty Hall:\nSuponha que os participantes de um programa de audit√≥rio recebam a op√ß√£o de escolher uma dentre tr√™s portas: atr√°s de uma delas h√° um carro; atr√°s das outras, h√° cabras. Depois que um dos participantes escolhe uma porta, o apresentador, que sabe o que h√° atr√°s de cada porta, abre uma das portas n√£o escolhidas, revelando uma cabra. Ele diz ao participante: \u0026ldquo;Voc√™ gostaria de mudar sua escolha para a outra porta fechada?\u0026rdquo;. Para o participante, √© vantajoso trocar sua escolha?\nTudo que intuitivamente sabemos sobre probabilidades, nos diz o seguinte:\nH√° chances iguais do pr√™mio estar nas tr√™s portas, portanto, a probabilidade de pr√™mio √© de 33,3% para cada porta. Uma vez que uma das portas √© eliminada, sobram duas portas com iguais probabilidades, portanto, cada uma delas tem uma probabilidade de 50% de conter o pr√™mio. Como h√° 50% de chance de acertar a porta, n√£o √© vantajoso trocar, nem se manter - ambas op√ß√µes apresentam o mesmo benef√≠cio. Mas - lembrando que a matem√°tica nem sempre √© intuitiva - Marylin causou muita confus√£o ao afirmar que √© mais vantajoso trocar a escolha. E n√£o √© por pouco, n√£o: voc√™ tem 2 vezes mais chance de ganhar o carro, se trocar a porta escolhida. Antes que voc√™, como muitos outros, comece a xing√°-la, dizendo que ela n√£o sabe de nada, saiba que sua afirma√ß√£o est√°, na verdade, correta. E a estat√≠stica Bayesiana pode te ajudar a entender o porqu√™.\nTudo come√ßa com uma premissa b√°sica: O apresentador, Monty Hall, n√£o est√° abrindo portas ao acaso. Se fosse o caso, ele correria o risco de abrir a porta do carro, sem querer, o que tira toda a gra√ßa do jogo. Ent√£o n√≥s precisamos nos atentar ao fato de que ele sabe onde est√° o carro. Embora isso n√£o mude a percep√ß√£o intuitiva do problema, pois ainda existem duas portas e um √∫nico pr√™mio, quando colocamos na ponta do l√°pis, esse detalhe fica bastante relevante.\nSuponha que o participante escolheu a porta 2, ao passo que o apresentador abriu a porta 3, mostrando uma cabra pacientemente comendo um pouco de palha. Como a probabilidade do carro estar atr√°s da porta de n√∫mero 1 se altera, diante da nova evid√™ncia da porta 3- P(p1|p3)?\nP(p1): Come√ßamos com chances iguais para as tr√™s portas, ent√£o mantemos esse valor - a probabilidade de que o carro esteja atr√°s da porta 1 √© de 33,3%.\nP(p3|p1): Aqui est√° o pulo do gato, qual a probabilidade de que a porta 3 seja aberta, caso o pr√™mio esteja atr√°s da porta 1?\nO apresentador n√£o pode abrir a porta 2, que voc√™ escolheu, porque √© contra as regras. O apresentador n√£o pode abrir a porta 1, pois o pr√™mio est√° nela e ele n√£o quer revel√°-lo. Nesse caso, a √∫nica porta que pode ser aberta √© a 3, ou seja, essa probabilidade √© 100%!\nP(p3): Ignorando agora a localiza√ß√£o do pr√™mio, qualquer uma das duas portas n√£o escolhidas poderiam ser abertas, fazendo com que a probabilidade da porta 3 ser aberta seja 50%.\nCompilando isso tudo na nossa querida formuleta:\n$$ P(p1|p3) = \\frac{P(p3|p1) P(p1)}{P(p3)} = \\frac{0,333 \\times 1}{0,5} = 0,666 $$\nComo vemos, a probabilidade de voc√™ ter errado, e o pr√™mio estar atr√°s da porta de n√∫mero 1, √© de 66,6%, portanto √© mais vantajoso aceitar a troca, ao ser perguntado pelo apresentador. Fazendo as contas para o caso contr√°rio (P(p2|p3)), a probabilidade da porta 3 ser aberta √© de 50%, pois o apresentador pode abrir qualquer uma das duas livremente, fazendo assim com que sua chance seja de 1 em 3 - 33,3%.\nNote que esse √© um caso particular do teorema. Quando enunciei a f√≥rmula pela primeira vez, a descrevi como uma propor√ß√£o do evento B, nesse caso espec√≠fico em que o evento A n√£o influencia o evento B, o evento B tamb√©m n√£o influencia o evento A - fazendo que que P(B|A) e P(B) se cancelem e P(A|B) seja igual √† P(A). At√© nisso Bayes foi bem sucedido em formular o bom senso matem√°ticamente, afinal, n√£o √© qualquer coisa que influencia as probabilidades. N√£o √© s√≥ porque o Nicolas Cage lan√ßou um filme novo, que mais pessoas v√£o morrer afogadas (o que n√£o siginifica que n√£o haja uma correla√ß√£o entre as duas coisas, mas isso √© um papo para outro momento).\nConclus√£o Viver como um ser l√≥gico e est√≥ico n√£o √© muito simples, nossa pr√≥pria mente prega truques ao tentar poupar energia usando o Sistema 1 para responder rapidamente os dilemas do dia-a-dia. Uma boa forma de ativar o Sistema 2 √© tentando adicionar a l√≥gica formal e a matem√°tica no seu racioc√≠nio, e o teorema de Bayes √© particularmente bom nisso.\nHoje, inclusive, existe quase que um culto √† filosofia bayesiana de vida, algumas pessoas realmente norteiam suas vidas usando esse conceito da estat√≠stica.\nN√£o √© necess√°rio, no entanto, se inscrever numa seita para tomar decis√µes melhores, ou interpretar resultados de forma mais correta, usando o teorema. Uma compreens√£o de que novas evid√™ncias atualizam probabilidades antigas, ao inv√©s de substitu√≠-las pode nos levar muito longe, ajudando a desmistificar os vi√©ses cognitivos da nossa mente!\nFontes Bayes theorem, the geometry of changing beliefs, 3Blue1Brown, 2019-12-22 (Acesso em Agosto de 2023).\nR√°pido e devagar: duas formas de pensar, Daniel Kahneman, 2012.\nO andar do b√™bado, Leonard Mlodinow, 2009.\n","permalink":"https://pfalcao97.githubpages.io/blog/posts/estatistica_bayesiana/","summary":"Introdu√ß√£o A matem√°tica √© l√≥gica, por defini√ß√£o. Mas isso n√£o significa que ela seja √≥bvia e, muito menos, intuitiva. Inclusive, muitas vezes, ela √© t√£o pouco √≥bvia e intuitiva, que nos parece n√£o-l√≥gica. E isso, por si s√≥, √© nada intuitivo!\nTanto √©, que existe um campo de estudo inteiro dedicado a tratar o ser humano como ente plenamente l√≥gico e racional - a economia - que foi virado de cabe√ßa pra baixo quando dois psic√≥logos chegaram e falaram \u0026ldquo;Ei, galera, n√£o √© bem assim\u0026hellip;\u0026rdquo;.","title":"O progn√≥stico por representatividade"},{"content":"Introdu√ß√£o Quase todo mundo que est√° inserido no mundo da programa√ß√£o conhece sobre Express√µes Regulares, mas, t√£o frequente quanto, o conhecimento fica s√≥ no \u0026ldquo;sobre\u0026rdquo;, mesmo: o modo de escrita, que beira a criptografia, e a falta de repert√≥rio para os casos de uso geram um sentimento generalizado de que RegEx √© ~basicamente~ m√°gica. Mas, diferente de m√°gica \u0026ldquo;de verdade\u0026rdquo;, conhecer o segredo e estragar a ilus√£o pode ser muito mais vantajoso.\nClaro, existem necessidades diferentes, que v√£o desde escrever uma express√£o simples para debugar o c√≥digo no seu editor, at√© fazer a extra√ß√£o de informa√ß√µes em dados n√£o estruturados, passando por melhorar a legibilidade de uma query no SQL. O que importa √© que, com um pouco de sitzfleisch, voc√™ pode adicionar mais uma ferramenta no seu arcabou√ßo e se tornar mais produtivo.\nA ideia do texto √© apenas molhar seus p√©s nesse universo, desmistificando o dialeto m√≠stico que separa os juniores dos s√™niors, a partir de uma compreens√£o mais palat√°vel.\nPuxando a cortina Para continuar a analogia da m√°gica, vamos puxar a cortina no meio do espet√°culo, tal qual o Mr. M. De forma simples, aquelas instru√ß√µes escritas em caracteres aparentemente aleat√≥rios s√£o instru√ß√µes para definir uma m√°quina de estados finita, basicamente um circuito l√≥gico com estados. Uma boa forma de entender esse conceito √© com o exemplo dispon√≠vel na p√°gina da Wikip√©dia: uma catraca.\nO estado \u0026ldquo;natural\u0026rdquo;, ou inicial, da catraca √© travada, voc√™ pode tentar empurrar, mas ela continua travada. A partir do momento que voc√™ passa o seu cart√£o com cr√©ditos suficiente, a catraca √© destravada. Ela fica nesse estado at√© que voc√™ a empurre, fazendo com que ela retorne ao estado natural.\nT√°, mas como n√≥s transportamos essa ideia para identificar um texto?\nVou responder isso usando um exemplo: suponha que voc√™ deseje criar uma dessas m√°quinas de estados finita que reconhe√ßa palavras entre aspas. Nesse caso, n√≥s teremos tr√™s estados:\nEstado inicial: vamos percorrer nosso texto, caracter a caracter, come√ßando aqui. Esse estado indica, efetivamente, que estamos come√ßando uma nova busca. S√≥ iremos passar pro pr√≥ximo, caso encontremos o caracter \u0026quot; (aspas duplas). Estado intermedi√°rio: encontramos o in√≠cio, agora precisamos achar o fim. Tudo que for letra encontrada pelo caminho n√£o altera o estado, a √∫nica coisa capaz de fazer com que n√≥s passemos de estado √©, novamente, o caracter \u0026ldquo;. Estado final: se chegamos at√© aqui, significa que tivemos um match, ou seja, encontramos a combina√ß√£o de caracteres capaz de percorrer todo o nosso algoritmo e podemos retornar esse texto. Para exercitar a imagina√ß√£o, eu gosto de pensar em uma setinha em cima das letras, conforme percorremos o texto. A seta indica qual estado estamos, dizendo algo do tipo \u0026ldquo;Isso √© um A, n√£o √© um caracter que muda o meu estado\u0026rdquo; ou \u0026ldquo;Epa, encontrei uma aspa dupla, muda de estado e vamos esperar para encontrar a pr√≥xima\u0026rdquo;, como na ferramenta Regexp::Debugger. [1]\nProgramaticamente, poder√≠amos fazer algo similar da seguinte forma:\nestado = 1 # Estado inicial match = \u0026#39;\u0026#39; # Nosso match for caracter in texto: # Faz um loop, letra a letra, pelo texto if estado == 2: # Caso estejamos no estado intermedi√°rio, match += caracter # adiciona o caracter √† vari√°vel de match if caracter == \u0026#39;\u0026#34;\u0026#39;: # Se encontrar uma aspa dupla, estado += 1 # muda de estado if estado != 3: # A menos que o estado seja o final, match += caracter # adiciona o caracter √† vari√°vel de match Embora essas representa√ß√µes deixem a inten√ß√£o mais clara, a dificuldade de desenhar diagramas de m√°quinas de estados finitas para cada caso (particularmente os mais complexos) se tornou um problema. Mas o criador das express√µes regulares, Stephen Kleene, deu um jeito de abreviar isso, gerando a forma como escrevemos express√µes regulares hoje. Todas as linhas de c√≥digo poderiam ser substitu√≠do por uma √∫nica linha:\nimport re match = re.search(\u0026#39;\u0026#34;.*\u0026#34;\u0026#39;, texto).group() Bem mais compacto, n√©?\nPois ent√£o, se definirmos o seguinte texto:\ntexto = \u0026#34;\u0026#34;\u0026#34;Este √© um exemplo de texto que cont√©m \u0026#34;aspas duplas\u0026#34;!\u0026#34;\u0026#34;\u0026#34; Os dois c√≥digos resultam no mesmo valor para a vari√°vel match:\n\u0026ldquo;aspas duplas\u0026rdquo;\nNota do autor: re √© a biblioteca nativa de express√µes regulares do Python. A documenta√ß√£o est√° nas fontes, no final da p√°gina. üòâ\nO beab√° do RegEx Agora voc√™ pode dizer: \u0026ldquo;T√°, muito legal, muito interessante, mas isso n√£o me ajuda em nada a escrever RegEx\u0026rdquo;. Sim, verdade, mas √© importante construir essa intui√ß√£o antes de come√ßar a estudar de fato, porque assim tem menos decoreba e mais compreens√£o.\nSe eu tiver feito bem o meu trabalho, quando eu escrevi o RegEx ali em cima (\u0026quot;.*\u0026quot;), voc√™ achou legal como ele resume tanta coisa. E a ideia √© continuar nesse mote, ao inv√©s de voc√™ olhar um asterisco e falar \u0026ldquo;Que merda √© essa?!\u0026rdquo;, eu espero que voc√™, no m√≠nimo, reconhe√ßa seu poder sintetizador.\nPois bem, nessa linha, existem duas classes que podem definir um caracter numa express√£o regular:\nLiteral: √© quando o caracter representa ele pr√≥prio. A √© A. Se voc√™ quer saber se a palavra \u0026ldquo;Pa√ßoca\u0026rdquo; aparece no texto, basta usar a pr√≥pria palavra. Reservado: um caracter √© reservado, ou especial, quando o seu significa surpassa o seu simbolo, um bom exemplo √© o j√° mencionado asterisco, que representa a repeti√ß√£o de um caracter \u0026ldquo;zero ou mais vezes\u0026rdquo;. Ou seja, um RegEx como b*d√° match com \u0026rsquo; \u0026lsquo;, \u0026lsquo;b\u0026rsquo;, \u0026lsquo;bb\u0026rsquo;, \u0026lsquo;bbb\u0026rsquo; e assim por diante. √Äs vezes, voc√™ precisa usar um caracter reservado como literal, para isso usamos a barra invertida \\. Ou seja, para usar o asterisco como asterisco, e n√£o como \u0026ldquo;zero ou mais vezes\u0026rdquo;, basta colocar \\*.\nMas o que acontece se a gente usar a barra invertida em um literal?\nBom, na maioria das vezes, nada. Mas algumas combina√ß√µes s√£o, pasmem, boas sintetizadoras. Por exemplo, caso voc√™ queira encontrar um n√∫mero de um digito, ou seja 0 ou 1 ou 2 ou\u0026hellip; ou 9. Voc√™ pode fazer um RegEx assim:\nre.search(\u0026#39;0|1|2|3|4|5|6|7|8|9\u0026#39;, texto).group() # A barra vertical, |, indica \u0026#34;ou\u0026#34;. Ou voc√™ pode usar \\d - Qualquer digito num√©rico. Claro, quem conhece um pouquinho de RegEx deve estar me xingando pela forma acima, que nunca seria utilizada, sendo prefer√≠vel a forma mais compacta: [0-9]. Mas eu prometo que n√£o vou deixar ponto sem n√≥, tudo tem um motivo (sim, at√© o \u0026quot;.*\u0026quot;, pros mais avan√ßados).\nE, com isso, a gente j√° tem os pilares para come√ßar a construir algumas express√µes progressivamente mais dif√≠ceis.\nVelocidade um na dan√ßa do cr√©u Essa primeira parte √© a que todo usu√°rio de computador conhece: quando voc√™ aperta ctrl+f (ou cmd+f üçé) para pesquisar uma palavra em uma p√°gina da web. Voc√™ digita a palavra que voc√™ est√° procurando e ela √© grifada na p√°gina. √â pura e simplesmente o uso de uma express√£o literal.\nEmbora isso possa parecer t√£o √≥bvio que voc√™ talvez nem perceba, esse √© um dos casos mais utilizados, na minha experi√™ncia. Por exemplo, voc√™ est√° analisando um banco de dados de produtos de moda e quer ver todos os produtos com cor rosa, para fazer um marketing de oportunidade pro filme da Barbie, basta rodar uma query assim:\nSELECT * FROM tabela_produtos WHERE LOWER(nome_produto) LIKE \u0026#39;rosa\u0026#39; Assim n√≥s encontramos aqueles produtos como \u0026ldquo;Camiseta M B√°sica Rosa\u0026rdquo; ou \u0026ldquo;Salto Alto Rosa\u0026rdquo;. O problema √© que muitas vezes o analista n√£o conhece muito de RegEx (ou aprendeu esse \u0026ldquo;truque\u0026rdquo; do LIKE e replica, sem pensar muito no que est√° fazendo) e a query rapidamente vira uma macarronada com dezenas de linhas fazendo v√°rios filtros de LIKE na mesma coluna.\nPara resolver isso\u0026hellip;\nVelocidade dois na dan√ßa do cr√©u Aqui a gente come√ßa a adicionar alguns daqueles caracteres reservados. Seja usando a j√° mencionada barra vertical ou os colchetes. Por exemplo, em uma lista de cidades com o nome da seguinte forma:\nCidade, Estado (Ex: S√£o Paulo, SP)\nComo podemos contar quantas cidades s√£o da regi√£o Norte?\nimport re qtd_cidades_norte = len(re.findall(\u0026#34;AC|AM|AP|PA|RO|RR|TO\u0026#34;, lista_cidades)) Agora, se voc√™ quisesse saber quais s√£o essas cidades, fica um pouco mais dif√≠cil. No caso do RegEx que eu escrevi ali, ele vai procurar as siglas dos estados no texto e adicionar essas siglas √† lista. Por isso ela √© √∫til s√≥ pra fazer a contagem. Ou em casos espec√≠ficos, como quando voc√™ √© mais liberal com a sua defini√ß√£o da cor rosa:\nSELECT * FROM tabela_produtos WHERE REGEXP_LIKE(nome_produto, \u0026#39;rosa|rox[ao]\u0026#39;, \u0026#39;i\u0026#39;) Parece que eu adicionei muita coisa de uma vez, mas vamos por partes:\nAl√©m da cor rosa, tamb√©m vamos procurar as pe√ßas com a cor roxa, portanto rosa|roxa. Roxo, por√©m, √© um adjetivo que possui flex√µes diferentes, conforme o g√™nero do substantivo (\u0026ldquo;Camiseta Roxa\u0026rdquo; ou \u0026ldquo;Len√ßo Roxo\u0026rdquo;), diferente do rosa. Assim, precisamos levar em considera√ß√£o as duas vers√µes. Mas, ao inv√©s de escrever rosa|roxa|roxo, como a ra√≠z \u0026ldquo;rox\u0026rdquo; √© igual para as duas palavras, podemos fazer o seguinte: rox[ao], ou seja, \u0026ldquo;Encontre uma palavra que come√ßa com \u0026lsquo;rox\u0026rsquo; e termina com \u0026lsquo;a\u0026rsquo; ou \u0026lsquo;o\u0026rsquo;\u0026rdquo;. Portanto: rosa|rox[ao]. Ao inv√©s de usar o LIKE, eu estou utilizando REGEXP_LIKE, para poder usar a flag i, que indica que n√£o vou fazer diferencia√ß√£o entre letras mai√∫sculas e min√∫sculas. T√° ficando dif√≠cil, ein?! At√© agora, n√£o escrevemos nada que salte os olhos como especialmente complexo. Mas nesse pr√≥ximo n√≠vel, a gente precisa come√ßar a incluir alguns daqueles s√≠mbolos diferentes.\nImagine, por exemplo, que voc√™ esteja auxiliando na digitaliza√ß√£o de documentos em uma empresa. Algu√©m j√° transformou os arquivos f√≠sicos em arquivos digitais, por√©m ainda √© preciso colocar alguns desses dados em bases de dados. Uma dessas informa√ß√µes √© a data de admiss√£o de todos os colaboradores. A sua chefa acabou de te pedir para fazer isso.\n√â evidente que esse trabalho n√£o seria t√£o compartimentado assim, mas, para fim de exemplo, exercite sua suspens√£o da descren√ßa: voc√™ s√≥ precisa salvar o nome do arquivo e a data de admiss√£o, depois algu√©m junta todos os dados do funcion√°rios em uma tabela, usando o nome de arquivo como chave prim√°ria.\nO documento √© um .txtque toma a seguinte forma:\nNome: Fulano de Tal\nCargo: Engenheiro de Dados\nData de Nascimento: 01/01/1990\nData de Admiss√£o: 01/01/2020\nUma boa forma de come√ßar √© pegar s√≥ a parte que voc√™ quer e garantir que voc√™ est√° conseguindo corresponder com ela. No nosso caso, queremos uma data com o formato DIA/M√äS/ANO, ou seja: dois digitos num√©ricos + / + dois digitos num√©ricos + / + quatro digitos num√©ricos:\nimport re re.search(\u0026#39;\\d\\d/\\d\\d/\\d\\d\\d\\d\u0026#39;, \u0026#39;01/01/2020\u0026#39;).group() Claro, se voc√™ j√° percebeu o modus operandi da ferramenta, h√° uma forma de simplificar a constru√ß√£o de caracteres iguais repetindo N vezes (quando N √© conhecido e fixo, j√° vimos que para vezes indeterminadas pode se usar o asterisco), usando as chaves, {N}:\nimport re re.search(\u0026#39;\\d{2}/\\d{2}/\\d{4}\u0026#39;, \u0026#39;01/01/2020\u0026#39;).group() As chaves podem, ainda, te dizer o m√°ximo e o m√≠nimo de repeti√ß√µes. Se voc√™ soubesse que em alguns casos o in√≠cio das datas foram omitidos (por exemplo \u0026ldquo;01/01/2020\u0026rdquo; sendo escrito como \u0026ldquo;1/1/20\u0026rdquo;), voc√™ poderia colocar a quantidade m√≠nima e m√°xima de repeti√ß√µes que voc√™ espera ver, usando a s√≠ntaxe {N√∫mero m√≠nimo de repeti√ß√µes, N√∫mero m√°ximo de repeti√ß√µes}:\nimport re re.search(\u0026#39;\\d{1,2}/\\d{1,2}/\\d{2,4}\u0026#39;, \u0026#39;01/01/2020\u0026#39;).group() S√≥ tem um problema\u0026hellip; Da mesma forma que o c√≥digo funciona para a data desejada, tamb√©m funciona para \u0026ldquo;99/99/9999\u0026rdquo;, que, obviamente, n√£o √© uma data. Se voc√™ tiver certeza que tudo est√° corretamente digitalizado, voc√™ poderia apenas usar o RegEx acima, mas √© poss√≠vel encontrar erros de digitaliza√ß√£o se voc√™ restringir um pouco o c√≥digo: sabemos que os dias s√≥ podem come√ßar com 0, 1, 2 ou 3, que os meses s√≥ podem come√ßar com 0 ou 1 e que o ano s√≥ pode come√ßar com 1 ou 2 (ou s√≥ 2, caso sua empresa tenha sido fundada depois do ano 2000), portanto podemos deixar nosso RegEx mais robusto (e confi√°vel) da seguinte forma:\nimport re re.search(\u0026#39;[0123]{0,1}\\d/[01]{0,1}\\d/[12]{0,1}\\d{2,3}\u0026#39;, \u0026#39;01/01/2020\u0026#39;).group() Agora t√° come√ßando a ficar com uma carinha legal, n√©?\nDepois disso fica f√°cil, a gente s√≥ precisa garantir que o RegEx pega a data de admiss√£o e n√£o a de nascimento, mas para isso basta usar o texto literal, que √© est√°tico:\nimport re re.search(\u0026#39;Data de Admiss√£o: [0123]{0,1}\\d/[01]{0,1}\\d/[12]{0,1}\\d{2,3}\u0026#39;, \u0026#39;Data de Admiss√£o: 01/01/2020\u0026#39;).group() Bom, na verdade, quase basta, porque se usarmos esse c√≥digo, ele vai trazer inclusive o texto \u0026ldquo;Data de Admiss√£o: \u0026ldquo;, que n√≥s n√£o queremos. Para separar o joio do trigo, n√≥s podemos utilizar grupos. Nesse caso, √© poss√≠vel adicionar um grupo de captura, usando o par√™nteses em torno da data. A√≠ sim, temos o c√≥digo completo para automatizar esse processo:\nfrom os import listdir from re import search lista_de_datas = list() diretorio = \u0026#34;/caminho/\u0026#34; # Caminho da pasta com os arquivos for documento in listdir(diretorio): if \u0026#39;.txt\u0026#39; in documento: # L√™ os documentos with open(diretorio + documento, \u0026#39;r\u0026#39;) as lupa: texto = lupa.read() # Salva o nome do documento e a data de admiss√£o em # uma tupla, e essa tupla em uma lista lista_de_datas.append( (documento, search(\u0026#39;Data de Admiss√£o: ([0123]{0,1}\\d/[01]{0,1}\\d/[12]{0,1}\\d{2,3})\u0026#39;, texto).group(1)) ) cr√©u cr√©u cr√©u cr√©u cr√©u\u0026hellip; (cr√©u )* üòÜ Tocamos brevemente no √∫ltimo ponto que quero fazer, na se√ß√£o anterior: o poder do RegEx como validador. Qualquer um que j√° teve a oportunidade de cuidar de um banco de dados com dados digitados por usu√°rio (como dados de cadastro), teve a experi√™ncia √∫nica de descobrir que pessoas que nasceram em 1822, ou que v√£o nascer em 3034, s√£o compradoras frequentes da sua loja.\nO ponto √©: essas informa√ß√µes n√£o s√£o sempre confi√°veis.\nNota do Autor: esta √© uma obra de fic√ß√£o. Os personagens, acontecimentos e nomes retratados s√£o inventados e qualquer semalhan√ßa com a realidade √© mera coincid√™ncia\nMas n√≥s podemos melhorar isso com uma camada de valida√ß√£o no cadastro: por que aceitar um dado que n√≥s j√° sabemos que √© errado? Validadores de CPF, por exemplo, s√£o t√£o comuns que viraram exerc√≠cio para estudantes de programa√ß√£o. Por que n√£o fazer o mesmo com validadores de outras informa√ß√µes, como emails e n√∫meros de telefone, para estudantes de RegEx?\nNa verdade, at√© tem um porqu√™\u0026hellip; Eu preciso ser sincero: a valida√ß√£o de email usando RegEx √© incompleta e extremamente confusa, por alguns motivos:\nDa mesma forma que um CPF estar no formato v√°lido, n√£o garante a exist√™ncia dele, um email v√°lido n√£o necessariamente existe. Para checar isso, √© necess√°rio o uso de outras ferramentas. Existem muitas formas de emails v√°lidos, principalmente formas que n√≥s n√£o temos contato no dia-a-dia, que s√£o raras e diferentes, mas\u0026hellip; MAS voc√™ entrar o seu email corretamente e o site n√£o aceitar, porque um programador teve pregui√ßa na hora de fazer um RegEx, √© uma das piores experi√™ncias poss√≠veis para um usu√°rio. Recomendo evitar, se voc√™ quiser mant√™-lo como cliente. Para um RegEx que obede√ßa √†s normas oficiais (pelo menos na √©poca em que foi escrita - N√£o, eu n√£o chequei), d√™ uma olhada na refer√™ncia [2]. Mas, aqui, vamos prezar pelo simples:\nO usu√°rio pode ter letras mai√∫sculas ou min√∫sculas, n√∫meros, \u0026ldquo;.\u0026rdquo;, \u0026ldquo;-\u0026rdquo; e \u0026ldquo;_\u0026rdquo;.\nO servidor ser√° apenas de alto n√≠vel e contendo apenas letras (isso significa que vamos ignorar o IP do servidor).\nIgualmente, vamos manter s√≥ dom√≠nios \u0026ldquo;.com\u0026rdquo;.\nAntes de prosseguir, quero s√≥ enfatizar mais uma vez: estou mais preocupado com o didatismo, use o c√≥digo abaixo com parcim√¥nia. Se voc√™ quer algo um pouco mais completo, esse site clama ter c√≥digos que funcionam 99,99% das vezes (Mas, ainda assim, a palavra de ordem √© ‚ú® parcim√¥nia ‚ú®. Experi√™ncia do usu√°rio √© importante).\nO fim √© mais f√°cil, ent√£o comecemos por ele:\nimport re re.search(\u0026#34;@[a-z]+.com$\u0026#34;, \u0026#39;@servidor.com\u0026#39;).group() Os principais servidores comerciais s√£o contemplados por essa regra, que diz, basicamente: Encontre um texto que come√ßa com o \u0026ldquo;@\u0026rdquo;, depois tem uma ou mais (uma ou mais est√° representado pelo +) letras min√∫sculas at√© encontrar o termo \u0026ldquo;.com\u0026rdquo;, que √© a √∫ltima parte do texto (representado pelo cifr√£o).\nEm cima disso, precisamos adicionar a parte do usu√°rio, que √© um pouco menos restritiva, pois ela pode conter letras mai√∫sculas [A-Z] ou min√∫sculas [a-z], n√∫meros [0-9], o ponto, o h√≠fen e a barra inferior.\nimport re re.search(\u0026#34;^[a-zA-Z0-9_\\.-]+@[a-z]+.com$\u0026#34;, \u0026#39;fulano.detal90@servidor.com\u0026#39;).group() Fizemos algo bem parecido, mas, ao inv√©s de considerar o fim do texto, $, estamos considerando o in√≠cio, ^, e ao inv√©s de considerarmos s√≥ as letras min√∫sculas, temos uma ou mais (+) de qualquer dos caracteres citados. Esse RegEx √© muito bom para enxugar uma lista de emails que vai ser usada em CRM, apesar de n√£o ser t√£o boa para valida√ß√£o.\nE talvez voc√™ esteja achando estranho o tom t√£o preocupado que estou tendo em rela√ß√£o √† valida√ß√£o. N√£o √© impress√£o sua, o tom √© propostial e eu vou te contar o porqu√™\u0026hellip;\nTamanho √© documento, SIM! Lembra que comentei que eu n√£o ia deixar ponto sem n√≥? Ent√£o, se voc√™ √© um bom aluno (ü§ì) e estiver testando junto com o texto, pode ter percebido que o \u0026quot;.*\u0026quot;funciona, pero no mucho. Porque, no exemplo cuidadosamente selecionado que dei, √© uma maravilha, mas se voc√™ coloca duas frases com aspas duplas, d√° tudo errado. Por que? Eu menti pra voc√™?!\nExiste mais de uma forma para chegar ao seu objetivo com RegEx e, a bem da verdade, existem formas melhores e piores. Essa que eu sugeri, √© uma das piores, porque o asterisco √© um modificador ganancioso, isso significa que ele pega o m√°ximo de caracteres poss√≠veis. Para o momento, ele estava mais do que suficiente, mas, depois de tudo que passamos juntos, acho que eu posso ter uma conversa mais s√©ria com voc√™.\nEscrever um bom RegEx √© sin√¥nimo de muitos testes e pensar fora da caixa, porque √© preciso ver se ele funciona em todas as situa√ß√µes em que voc√™ precisa que ele funcione e, t√£o importante quanto, n√£o funcione quando voc√™ precise que ele n√£o funcione. H√°, ainda, que se considerar a performace. Por isso, no geral, Express√µes regulares mais completas e mais longas, s√£o melhores. Se voc√™ tomar atalhos, sua performace, sua seguran√ßa ou os dois, podem sofrer.\nFoi exatamente isso que aconteceu com a Cloudflare, em 2019. Vale a pena a leitura da descri√ß√£o completa do problema no blog deles ([3]), especialmente se voc√™ se interessa por seguran√ßa, mas o resumo da opera √©:\nUm engenheiro escreveu um c√≥digo RegEx para o WAF (Web Application Firewall) do servi√ßo. WAF √© um firewall espec√≠fico para chamadas HTTP, que visa proteger os servi√ßos de ataques maliciosos como SQL Injection ou outras formas de interagir com o servidor usando comandos \u0026ldquo;escondidos\u0026rdquo; na query. O c√≥digo era esse: (?:(?:\u0026quot;|\u0026rsquo;|]|}|\\|\\d|(?:nan|infinity|true|false|null|undefined|symbol|math)|`|-|+)+[)];?((?:\\s|-|~|!|{}||||+).(?:.=.*)))\nPela natureza desse tipo de a√ß√£o, que deve ser r√°pida para impedir que O Mais Novo Cyber Ataque‚Ñ¢Ô∏è cause estragos, algu√©m escreve um c√≥digo, h√° uma valida√ß√£o entre o time de engenharia, que aceita o Pull Request e o commit √© feito, sendo implementado em todos os servidores ao redor do globo em segundos, sem, naquele momento, todas as precau√ß√µes necess√°rias.\nN√£o haviam travas ou testes de consumo de CPU para barrar o RegEx, apenas testes de detec√ß√£o, isso fez que o c√≥digo mal otimizado, particularmente .*.*=.*, exigisse muito do CPU do servidor, para toda nova requisi√ß√£o. Em poucos minutos essa regra fritou os servidores globais da CloudFlare, deixando v√°rios servi√ßos fora do ar.\nO que aconteceu foi, basicamente, uma regra perigosa (Procure qualquer coisa de qualquer tamanho, seguida de qualquer coisa de qualquer tamanho, seguida de um igual, seguida de qualquer coisa de qualquer tamanho) e a falta de testes suficientes gerando um problema de escala global.\nO perigo nesse tipo de regra √© conhecido, damos a ele o nome Catastrophic Backtracking (Em tradu√ß√£o livre, seria algo como Marcha-r√© Catastr√≥fica): a regra √© escrita de uma maneira que o motor RegEx precisa checar m√∫ltiplas vezes uma mesma palavra, para verificar a exist√™ncia de correspond√™ncias.\nPor isso a √™nfase que estou tendo, particularmente em c√≥digos de valida√ß√£o, √© preciso testes e travas que protejam o ambiente contra essas situa√ß√µes catastr√≥ficas, al√©m da tal parcim√¥nia na hora de escrever os c√≥digos, sempre pensando em situa√ß√µes limite.\nConclus√£o As express√µes regulares s√£o uma das ferramentas mais poderosas na programa√ß√£o, ela pode, literalmente, transformar sua vida em um inferno ou agilizar seu trabalho em muitas vezes. Embora eu n√£o espere que voc√™ saia desse texto com a capacidade de escrever um c√≥digo RegEx capaz de encontrar n√∫meros primos (recomendo demais olhar isso, √© uma das coisas mais legais que j√° vi feitas com RegEx - [4]), eu espero que ele tenha sido √∫til para, ao menos, desmistificar os c√≥digos e te incentivar a finalmente estudar.\nCita√ß√µes [1] - Watch RegExes with Regexp::Debugger\n[2] - Mail::RFC822::Address: RegExp-based address validation [3] - How Regular Expressions and a WAF DoS-ed Cloudflare\n[4] - A regular expression to check for prime numbers\nFontes Regular Expressions, Computerphile, 2020-01-09. (Acesso em Julho de 2023)\nTutorial, RegExp.info (Acesso em Julho de 2023)\nDocumenta√ß√£o re, Python Software Foundation (Acesso em Julho de 2023)\nDocumenta√ß√£o do PostgreSQL, PostgreSQL Global Developmente Group (Acesso em Julho de 2023)\nUnder the Hood: Regular Expressions, Reindeer Effect, 2018-06-24 (Acesso em Julho de 2023)\nRegexes: The Bad, the Better, and the Best, Liz Bennett, 2015-06-18 (Acesso em Julho de 2023)\n","permalink":"https://pfalcao97.githubpages.io/blog/posts/regex/","summary":"Introdu√ß√£o Quase todo mundo que est√° inserido no mundo da programa√ß√£o conhece sobre Express√µes Regulares, mas, t√£o frequente quanto, o conhecimento fica s√≥ no \u0026ldquo;sobre\u0026rdquo;, mesmo: o modo de escrita, que beira a criptografia, e a falta de repert√≥rio para os casos de uso geram um sentimento generalizado de que RegEx √© ~basicamente~ m√°gica. Mas, diferente de m√°gica \u0026ldquo;de verdade\u0026rdquo;, conhecer o segredo e estragar a ilus√£o pode ser muito mais vantajoso.","title":"Express√µes Regulares"},{"content":"Pedro Falc√£o Engenheiro de Dados @ Descomplica üáßüá∑\nSobre mim: Sou formado em Engenharia Mec√¢nica, pela Universidade de S√£o Paulo, mas, desde antes disso, trabalho com dados. Comecei a aprender conceitos de Python e aprendizado de m√°quina desde meu primeiro ano da universidade, em 2017, e desde ent√£o meu interesse por programa√ß√£o sempre cresceu. Minha maior paix√£o √© compartilhar conhecimento, ent√£o, por muitos anos, trabalhei na constru√ß√£o de projetos que poderiam me ajudar com esse objetivo, incluindo dar aulas e escrever um blog de comunica√ß√£o cient√≠fica. Atualmente, a maior parte do meu tempo livre √© voltada para adquirir conhecimento que me permita criar um canal para o ensino de conceitos em STEM (Sigla em ingl√™s que significa Ci√™ncia, Tecnologia, Engenharia e Matem√°tica). Tenho muitos planos para o futuro e espero compartilhar tudo isso em breve.\nSou apaixonado pela filosofia Open Source e tento usar e dar suporte ao movimento FOSS sempre que poss√≠vel, portanto, estou aberto a contribuir com qualquer projeto desse tipo. Al√©m disso, adoraria ajudar em projetos mais focados em matem√°tica (como problemas de otimiza√ß√£o e simula√ß√µes) e an√°lise de dados. Se quiser conversar √© s√≥ me chamar no meu LinkedIn!\nDesenvolvimento: Meu trabalho √© como Engenheiro de Dados, em uma empresa brasileira de educa√ß√£o, Descomplica. Trabalho diariamente com sistemas Python, SQL, GCP, Bash, Docker, Airflow e UNIX. Tamb√©m estou aprendendo Rust no meu tempo livre, ent√£o isso pode aparecer de vez em quando aqui! Como comentei, j√° trabalhei profissionalmente no desenvolvimento de (mas n√£o somente) sistemas de dados, ent√£o, em meu curr√≠culo, tenho dezenas de projetos em automa√ß√£o, otimiza√ß√£o de processos, Extra√ß√£o-Tratamento- Carregamento de pipelines, Escrita de relat√≥rios complexos de an√°lise de dados, cria√ß√£o de projetos de Machine Learning, desenvolvimento de algoritmos, cria√ß√£o de bots (para plataformas como Telegram e Slack) e visualiza√ß√£o de dados. Tamb√©m trabalhei em pequenos projetos para mim, especialmente an√°lise de dados e automa√ß√£o.\nUm projeto em que trabalhei em meu tempo livre, do qual estou particularmente orgulhoso, foi automatizar um pipeline que consiste em extrair dados n√£o estruturados de um arquivo PDF (incluindo transform√°-lo em um arquivo de texto e, em seguida, desenvolver v√°rios c√≥digos RegEx complexos para obter exatamente os dados que me interessam - Trabalhar com PDFs √© notoriamente dif√≠cil), trat√°-los, porque eles tinham v√°rios formatos de data e mais de uma moeda e, finalmente, carreg√°-los em uma planilha do Excel. Este processo foi feito para automatizar um problema de trabalho comum para minha ador√°vel namorada advogada. Post√¢mbulo: Ok, ent√£o isso era tudo que eu tinha para dizer que era minimamente interessante. Agora, a parte que voc√™ pode pular sem se preocupar: Meus gostos e desgostos!\nNa maioria das vezes, estou fazendo o que descrevi nas outras se√ß√µes, mas tamb√©m mexo regularmente com equipamentos de √°udio e impress√£o 3D. Tenho uma impressora 3D Ender 3, que uso para resolver pequenas inconveni√™ncias na vida das pessoas ao meu redor e uma infinidade de equipamentos de √°udio, meu IEM favorito √© o Ikko OH10 (ou Obsidian). Gosto de malhar e correr/caminhar pela cidade. Tamb√©m adoro jogar videogame, embora isso n√£o seja algo que eu tenha tanto tempo hoje em dia, entre os meus jogos favoritos, posso citar Disco Elysium, Half-Life e Deus Ex. Meu seriado preferido √© Seinfeld, com quem, segundo aquela linda namorada de quem falei, compartilho muitos maneirismos. Eu tento ler todos os dias antes de dormir e meu g√™nero favorito √© a comunica√ß√£o cient√≠fica.\n","permalink":"https://pfalcao97.githubpages.io/blog/aboutme/","summary":"Pedro Falc√£o Engenheiro de Dados @ Descomplica üáßüá∑\nSobre mim: Sou formado em Engenharia Mec√¢nica, pela Universidade de S√£o Paulo, mas, desde antes disso, trabalho com dados. Comecei a aprender conceitos de Python e aprendizado de m√°quina desde meu primeiro ano da universidade, em 2017, e desde ent√£o meu interesse por programa√ß√£o sempre cresceu. Minha maior paix√£o √© compartilhar conhecimento, ent√£o, por muitos anos, trabalhei na constru√ß√£o de projetos que poderiam me ajudar com esse objetivo, incluindo dar aulas e escrever um blog de comunica√ß√£o cient√≠fica.","title":""}]